                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _IRQ_Handler_TIM4
                                     13 	.globl _TimerMatch
                                     14 	.globl _ReadInputGpio
                                     15 	.globl _tick
                                     16 	.globl _SetTimer
                                     17 	.globl _TIM4_ClearITPendingBit
                                     18 	.globl _TIM4_ClearFlag
                                     19 	.globl _TIM4_ITConfig
                                     20 	.globl _TIM4_Cmd
                                     21 	.globl _TIM4_TimeBaseInit
                                     22 	.globl _TIM4_DeInit
                                     23 	.globl _CLK_PeripheralClockConfig
                                     24 	.globl _CLK_SYSCLKDivConfig
                                     25 	.globl _CLK_DeInit
                                     26 	.globl _GPIO_ReadInputDataBit
                                     27 	.globl _GPIO_ToggleBits
                                     28 	.globl _GPIO_ResetBits
                                     29 	.globl _GPIO_SetBits
                                     30 	.globl _GPIO_Init
                                     31 	.globl _GPIO_DeInit
                                     32 	.globl _SysCntrl
                                     33 	.globl _bMainTimer
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area DATA
      000000                         38 _bMainTimer::
      000000                         39 	.ds 1
      000001                         40 _SysCntrl::
      000001                         41 	.ds 20
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area INITIALIZED
                                     46 ;--------------------------------------------------------
                                     47 ; Stack segment in internal ram 
                                     48 ;--------------------------------------------------------
                                     49 	.area	SSEG
      000000                         50 __start__stack:
      000000                         51 	.ds	1
                                     52 
                                     53 ;--------------------------------------------------------
                                     54 ; absolute external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area DABS (ABS)
                                     57 
                                     58 ; default segment ordering for linker
                                     59 	.area HOME
                                     60 	.area GSINIT
                                     61 	.area GSFINAL
                                     62 	.area CONST
                                     63 	.area INITIALIZER
                                     64 	.area CODE
                                     65 
                                     66 ;--------------------------------------------------------
                                     67 ; interrupt vector 
                                     68 ;--------------------------------------------------------
                                     69 	.area HOME
      000000                         70 __interrupt_vect:
      000000 82v00u00u00             71 	int s_GSINIT ; reset
      000004 82 00 00 00             72 	int 0x000000 ; trap
      000008 82 00 00 00             73 	int 0x000000 ; int0
      00000C 82 00 00 00             74 	int 0x000000 ; int1
      000010 82 00 00 00             75 	int 0x000000 ; int2
      000014 82 00 00 00             76 	int 0x000000 ; int3
      000018 82 00 00 00             77 	int 0x000000 ; int4
      00001C 82 00 00 00             78 	int 0x000000 ; int5
      000020 82 00 00 00             79 	int 0x000000 ; int6
      000024 82 00 00 00             80 	int 0x000000 ; int7
      000028 82 00 00 00             81 	int 0x000000 ; int8
      00002C 82 00 00 00             82 	int 0x000000 ; int9
      000030 82 00 00 00             83 	int 0x000000 ; int10
      000034 82 00 00 00             84 	int 0x000000 ; int11
      000038 82 00 00 00             85 	int 0x000000 ; int12
      00003C 82 00 00 00             86 	int 0x000000 ; int13
      000040 82 00 00 00             87 	int 0x000000 ; int14
      000044 82 00 00 00             88 	int 0x000000 ; int15
      000048 82 00 00 00             89 	int 0x000000 ; int16
      00004C 82 00 00 00             90 	int 0x000000 ; int17
      000050 82 00 00 00             91 	int 0x000000 ; int18
      000054 82 00 00 00             92 	int 0x000000 ; int19
      000058 82 00 00 00             93 	int 0x000000 ; int20
      00005C 82 00 00 00             94 	int 0x000000 ; int21
      000060 82 00 00 00             95 	int 0x000000 ; int22
      000064 82 00 00 00             96 	int 0x000000 ; int23
      000068 82 00 00 00             97 	int 0x000000 ; int24
      00006C 82v00u03u1A             98 	int _IRQ_Handler_TIM4 ; int25
                                     99 ;--------------------------------------------------------
                                    100 ; global & static initialisations
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME
                                    103 	.area GSINIT
                                    104 	.area GSFINAL
                                    105 	.area GSINIT
      000000                        106 __sdcc_gs_init_startup:
      000000                        107 __sdcc_init_data:
                                    108 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  109 	ldw x, #l_DATA
      000003 27 07            [ 1]  110 	jreq	00002$
      000005                        111 00001$:
      000005 72 4FuFFuFF      [ 1]  112 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  113 	decw x
      00000A 26 F9            [ 1]  114 	jrne	00001$
      00000C                        115 00002$:
      00000C AEr00r00         [ 2]  116 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  117 	jreq	00004$
      000011                        118 00003$:
      000011 D6uFFuFF         [ 1]  119 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  120 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  121 	decw	x
      000018 26 F7            [ 1]  122 	jrne	00003$
      00001A                        123 00004$:
                                    124 ; stm8_genXINIT() end
                                    125 	.area GSFINAL
      000000 CCr00r70         [ 2]  126 	jp	__sdcc_program_startup
                                    127 ;--------------------------------------------------------
                                    128 ; Home
                                    129 ;--------------------------------------------------------
                                    130 	.area HOME
                                    131 	.area HOME
      000070                        132 __sdcc_program_startup:
      000070 CCr03r27         [ 2]  133 	jp	_main
                                    134 ;	return from main will return to caller
                                    135 ;--------------------------------------------------------
                                    136 ; code
                                    137 ;--------------------------------------------------------
                                    138 	.area CODE
                                    139 ;	main.c: 38: void SetTimer(uint8_t tmr, unsigned int value)
                                    140 ;	-----------------------------------------
                                    141 ;	 function SetTimer
                                    142 ;	-----------------------------------------
      000000                        143 _SetTimer:
                                    144 ;	main.c: 41: switch (tmr) {
      000000 7B 03            [ 1]  145 	ld	a, (0x03, sp)
      000002 A1 00            [ 1]  146 	cp	a, #0x00
      000004 27 12            [ 1]  147 	jreq	00101$
      000006 7B 03            [ 1]  148 	ld	a, (0x03, sp)
      000008 4A               [ 1]  149 	dec	a
      000009 27 14            [ 1]  150 	jreq	00102$
      00000B 7B 03            [ 1]  151 	ld	a, (0x03, sp)
      00000D A1 02            [ 1]  152 	cp	a, #0x02
      00000F 27 15            [ 1]  153 	jreq	00103$
      000011 7B 03            [ 1]  154 	ld	a, (0x03, sp)
      000013 A1 03            [ 1]  155 	cp	a, #0x03
      000015 27 16            [ 1]  156 	jreq	00104$
      000017 81               [ 4]  157 	ret
                                    158 ;	main.c: 42: case 0:
      000018                        159 00101$:
                                    160 ;	main.c: 43: SysCntrl.Timer_0 = value;
      000018 AEr00r01         [ 2]  161 	ldw	x, #(_SysCntrl + 0)
      00001B 16 04            [ 2]  162 	ldw	y, (0x04, sp)
      00001D FF               [ 2]  163 	ldw	(x), y
                                    164 ;	main.c: 44: break;
      00001E 81               [ 4]  165 	ret
                                    166 ;	main.c: 45: case 1:
      00001F                        167 00102$:
                                    168 ;	main.c: 46: SysCntrl.Timer_1 = value;
      00001F AEr00r03         [ 2]  169 	ldw	x, #(_SysCntrl + 2)
      000022 16 04            [ 2]  170 	ldw	y, (0x04, sp)
      000024 FF               [ 2]  171 	ldw	(x), y
                                    172 ;	main.c: 47: break;
      000025 81               [ 4]  173 	ret
                                    174 ;	main.c: 48: case 2:
      000026                        175 00103$:
                                    176 ;	main.c: 49: SysCntrl.Timer_2 = value;
      000026 AEr00r05         [ 2]  177 	ldw	x, #(_SysCntrl + 4)
      000029 16 04            [ 2]  178 	ldw	y, (0x04, sp)
      00002B FF               [ 2]  179 	ldw	(x), y
                                    180 ;	main.c: 50: break;
      00002C 81               [ 4]  181 	ret
                                    182 ;	main.c: 51: case 3:
      00002D                        183 00104$:
                                    184 ;	main.c: 52: SysCntrl.Timer_3 = value;
      00002D AEr00r07         [ 2]  185 	ldw	x, #(_SysCntrl + 6)
      000030 16 04            [ 2]  186 	ldw	y, (0x04, sp)
      000032 FF               [ 2]  187 	ldw	(x), y
                                    188 ;	main.c: 54: }
                                    189 ;	main.c: 56: }
      000033 81               [ 4]  190 	ret
                                    191 ;	main.c: 58: void tick(enum event_t ev)
                                    192 ;	-----------------------------------------
                                    193 ;	 function tick
                                    194 ;	-----------------------------------------
      000034                        195 _tick:
      000034 88               [ 1]  196 	push	a
                                    197 ;	main.c: 61: switch (SysCntrl.state) {
      000035 C6u00u0B         [ 1]  198 	ld	a, _SysCntrl+10
      000038 97               [ 1]  199 	ld	xl, a
      000039 A1 07            [ 1]  200 	cp	a, #0x07
      00003B 23 03            [ 2]  201 	jrule	00186$
      00003D CCr02r15         [ 2]  202 	jp	00129$
      000040                        203 00186$:
                                    204 ;	main.c: 93: if( ev == timer_2){
      000040 7B 04            [ 1]  205 	ld	a, (0x04, sp)
      000042 A0 03            [ 1]  206 	sub	a, #0x03
      000044 26 04            [ 1]  207 	jrne	00188$
      000046 4C               [ 1]  208 	inc	a
      000047 6B 01            [ 1]  209 	ld	(0x01, sp), a
      000049 C5                     210 	.byte 0xc5
      00004A                        211 00188$:
      00004A 0F 01            [ 1]  212 	clr	(0x01, sp)
      00004C                        213 00189$:
                                    214 ;	main.c: 137: if (ev == timer_0){
      00004C 7B 04            [ 1]  215 	ld	a, (0x04, sp)
      00004E 4A               [ 1]  216 	dec	a
      00004F 26 03            [ 1]  217 	jrne	00191$
      000051 A6 01            [ 1]  218 	ld	a, #0x01
      000053 21                     219 	.byte 0x21
      000054                        220 00191$:
      000054 4F               [ 1]  221 	clr	a
      000055                        222 00192$:
                                    223 ;	main.c: 61: switch (SysCntrl.state) {
      000055 02               [ 1]  224 	rlwa	x
      000056 4F               [ 1]  225 	clr	a
      000057 01               [ 1]  226 	rrwa	x
      000058 58               [ 2]  227 	sllw	x
      000059 DEu00u5D         [ 2]  228 	ldw	x, (#00193$, x)
      00005C FC               [ 2]  229 	jp	(x)
      00005D                        230 00193$:
      00005Dr00r6D                  231 	.dw	#00101$
      00005Fr02r15                  232 	.dw	#00129$
      000061r00rEA                  233 	.dw	#00108$
      000063r01r19                  234 	.dw	#00111$
      000065r01rFC                  235 	.dw	#00125$
      000067r01r3D                  236 	.dw	#00114$
      000069r01r6C                  237 	.dw	#00117$
      00006Br01r9A                  238 	.dw	#00120$
                                    239 ;	main.c: 62: case WAIT_PWR_BTN:
      00006D                        240 00101$:
                                    241 ;	main.c: 63: if (ev == start) {
      00006D 0D 04            [ 1]  242 	tnz	(0x04, sp)
      00006F 26 0B            [ 1]  243 	jrne	00103$
                                    244 ;	main.c: 65: SetTimer(3, TIMER_1_SEC);
      000071 4B 64            [ 1]  245 	push	#0x64
      000073 4B 00            [ 1]  246 	push	#0x00
      000075 4B 03            [ 1]  247 	push	#0x03
      000077 CDr00r00         [ 4]  248 	call	_SetTimer
      00007A 5B 03            [ 2]  249 	addw	sp, #3
      00007C                        250 00103$:
                                    251 ;	main.c: 68: if ( ev == timer_3){
      00007C 7B 04            [ 1]  252 	ld	a, (0x04, sp)
      00007E A1 04            [ 1]  253 	cp	a, #0x04
      000080 26 16            [ 1]  254 	jrne	00105$
                                    255 ;	main.c: 69: GPIO_ToggleBits(LED_PWR);
      000082 4B 01            [ 1]  256 	push	#0x01
      000084 4B 0F            [ 1]  257 	push	#0x0f
      000086 4B 50            [ 1]  258 	push	#0x50
      000088 CDr00r00         [ 4]  259 	call	_GPIO_ToggleBits
      00008B 5B 03            [ 2]  260 	addw	sp, #3
                                    261 ;	main.c: 70: SetTimer(3, TIMER_1_SEC);
      00008D 4B 64            [ 1]  262 	push	#0x64
      00008F 4B 00            [ 1]  263 	push	#0x00
      000091 4B 03            [ 1]  264 	push	#0x03
      000093 CDr00r00         [ 4]  265 	call	_SetTimer
      000096 5B 03            [ 2]  266 	addw	sp, #3
      000098                        267 00105$:
                                    268 ;	main.c: 72: if (ev == pwrbtn_on) {
      000098 7B 04            [ 1]  269 	ld	a, (0x04, sp)
      00009A A1 05            [ 1]  270 	cp	a, #0x05
      00009C 27 03            [ 1]  271 	jreq	00200$
      00009E CCr02r15         [ 2]  272 	jp	00129$
      0000A1                        273 00200$:
                                    274 ;	main.c: 73: GPIO_SetBits(LED_PWR);
      0000A1 4B 01            [ 1]  275 	push	#0x01
      0000A3 4B 0F            [ 1]  276 	push	#0x0f
      0000A5 4B 50            [ 1]  277 	push	#0x50
      0000A7 CDr00r00         [ 4]  278 	call	_GPIO_SetBits
      0000AA 5B 03            [ 2]  279 	addw	sp, #3
                                    280 ;	main.c: 75: GPIO_SetBits(ENABLE_5V);
      0000AC 4B 04            [ 1]  281 	push	#0x04
      0000AE 4B 05            [ 1]  282 	push	#0x05
      0000B0 4B 50            [ 1]  283 	push	#0x50
      0000B2 CDr00r00         [ 4]  284 	call	_GPIO_SetBits
      0000B5 5B 03            [ 2]  285 	addw	sp, #3
                                    286 ;	main.c: 76: GPIO_SetBits(RESET_CPU);
      0000B7 4B 80            [ 1]  287 	push	#0x80
      0000B9 4B 05            [ 1]  288 	push	#0x05
      0000BB 4B 50            [ 1]  289 	push	#0x50
      0000BD CDr00r00         [ 4]  290 	call	_GPIO_SetBits
      0000C0 5B 03            [ 2]  291 	addw	sp, #3
                                    292 ;	main.c: 77: SetTimer(1, TIMER_500_MS);
      0000C2 4B 32            [ 1]  293 	push	#0x32
      0000C4 4B 00            [ 1]  294 	push	#0x00
      0000C6 4B 01            [ 1]  295 	push	#0x01
      0000C8 CDr00r00         [ 4]  296 	call	_SetTimer
      0000CB 5B 03            [ 2]  297 	addw	sp, #3
                                    298 ;	main.c: 78: SetTimer(0, TIMER_500_MS);
      0000CD 4B 32            [ 1]  299 	push	#0x32
      0000CF 4B 00            [ 1]  300 	push	#0x00
      0000D1 4B 00            [ 1]  301 	push	#0x00
      0000D3 CDr00r00         [ 4]  302 	call	_SetTimer
      0000D6 5B 03            [ 2]  303 	addw	sp, #3
                                    304 ;	main.c: 80: SetTimer(2, TIMER_100_MS);
      0000D8 4B 0A            [ 1]  305 	push	#0x0a
      0000DA 4B 00            [ 1]  306 	push	#0x00
      0000DC 4B 02            [ 1]  307 	push	#0x02
      0000DE CDr00r00         [ 4]  308 	call	_SetTimer
      0000E1 5B 03            [ 2]  309 	addw	sp, #3
                                    310 ;	main.c: 81: SysCntrl.state = WAIT_PGOOD;
      0000E3 35 02u00u0B      [ 1]  311 	mov	_SysCntrl+10, #0x02
                                    312 ;	main.c: 83: break;
      0000E7 CCr02r15         [ 2]  313 	jp	00129$
                                    314 ;	main.c: 84: case WAIT_PGOOD:
      0000EA                        315 00108$:
                                    316 ;	main.c: 93: if( ev == timer_2){
      0000EA 0D 01            [ 1]  317 	tnz	(0x01, sp)
      0000EC 26 03            [ 1]  318 	jrne	00201$
      0000EE CCr02r15         [ 2]  319 	jp	00129$
      0000F1                        320 00201$:
                                    321 ;	main.c: 94: GPIO_ResetBits(LED_GOOD);
      0000F1 4B 08            [ 1]  322 	push	#0x08
      0000F3 4B 00            [ 1]  323 	push	#0x00
      0000F5 4B 50            [ 1]  324 	push	#0x50
      0000F7 CDr00r00         [ 4]  325 	call	_GPIO_ResetBits
      0000FA 5B 03            [ 2]  326 	addw	sp, #3
                                    327 ;	main.c: 95: GPIO_SetBits(PG_SMARC);
      0000FC 4B 08            [ 1]  328 	push	#0x08
      0000FE 4B 05            [ 1]  329 	push	#0x05
      000100 4B 50            [ 1]  330 	push	#0x50
      000102 CDr00r00         [ 4]  331 	call	_GPIO_SetBits
      000105 5B 03            [ 2]  332 	addw	sp, #3
                                    333 ;	main.c: 96: SetTimer(2, TIMER_100_MS);
      000107 4B 0A            [ 1]  334 	push	#0x0a
      000109 4B 00            [ 1]  335 	push	#0x00
      00010B 4B 02            [ 1]  336 	push	#0x02
      00010D CDr00r00         [ 4]  337 	call	_SetTimer
      000110 5B 03            [ 2]  338 	addw	sp, #3
                                    339 ;	main.c: 97: SysCntrl.state = WAIT_CARRIER_ON;
      000112 35 03u00u0B      [ 1]  340 	mov	_SysCntrl+10, #0x03
                                    341 ;	main.c: 106: break;
      000116 CCr02r15         [ 2]  342 	jp	00129$
                                    343 ;	main.c: 107: case WAIT_CARRIER_ON:
      000119                        344 00111$:
                                    345 ;	main.c: 114: if( ev == timer_2){
      000119 0D 01            [ 1]  346 	tnz	(0x01, sp)
      00011B 26 03            [ 1]  347 	jrne	00202$
      00011D CCr02r15         [ 2]  348 	jp	00129$
      000120                        349 00202$:
                                    350 ;	main.c: 115: GPIO_SetBits(ENABLE_DCDC);
      000120 4B 02            [ 1]  351 	push	#0x02
      000122 4B 05            [ 1]  352 	push	#0x05
      000124 4B 50            [ 1]  353 	push	#0x50
      000126 CDr00r00         [ 4]  354 	call	_GPIO_SetBits
      000129 5B 03            [ 2]  355 	addw	sp, #3
                                    356 ;	main.c: 116: SetTimer(2, TIMER_100_MS);
      00012B 4B 0A            [ 1]  357 	push	#0x0a
      00012D 4B 00            [ 1]  358 	push	#0x00
      00012F 4B 02            [ 1]  359 	push	#0x02
      000131 CDr00r00         [ 4]  360 	call	_SetTimer
      000134 5B 03            [ 2]  361 	addw	sp, #3
                                    362 ;	main.c: 117: SysCntrl.state = CPU_START;
      000136 35 05u00u0B      [ 1]  363 	mov	_SysCntrl+10, #0x05
                                    364 ;	main.c: 119: break;
      00013A CCr02r15         [ 2]  365 	jp	00129$
                                    366 ;	main.c: 120: case CPU_START:
      00013D                        367 00114$:
                                    368 ;	main.c: 121: if (ev == timer_2){
      00013D 0D 01            [ 1]  369 	tnz	(0x01, sp)
      00013F 26 03            [ 1]  370 	jrne	00203$
      000141 CCr02r15         [ 2]  371 	jp	00129$
      000144                        372 00203$:
                                    373 ;	main.c: 122: GPIO_SetBits(POWER_CPU);
      000144 4B 40            [ 1]  374 	push	#0x40
      000146 4B 05            [ 1]  375 	push	#0x05
      000148 4B 50            [ 1]  376 	push	#0x50
      00014A CDr00r00         [ 4]  377 	call	_GPIO_SetBits
      00014D 5B 03            [ 2]  378 	addw	sp, #3
                                    379 ;	main.c: 123: GPIO_SetBits(LED_PWR);
      00014F 4B 01            [ 1]  380 	push	#0x01
      000151 4B 0F            [ 1]  381 	push	#0x0f
      000153 4B 50            [ 1]  382 	push	#0x50
      000155 CDr00r00         [ 4]  383 	call	_GPIO_SetBits
      000158 5B 03            [ 2]  384 	addw	sp, #3
                                    385 ;	main.c: 124: SetTimer(2, TIMER_100_MS);
      00015A 4B 0A            [ 1]  386 	push	#0x0a
      00015C 4B 00            [ 1]  387 	push	#0x00
      00015E 4B 02            [ 1]  388 	push	#0x02
      000160 CDr00r00         [ 4]  389 	call	_SetTimer
      000163 5B 03            [ 2]  390 	addw	sp, #3
                                    391 ;	main.c: 125: SysCntrl.state = CPU_NO_RST;
      000165 35 06u00u0B      [ 1]  392 	mov	_SysCntrl+10, #0x06
                                    393 ;	main.c: 127: break;
      000169 CCr02r15         [ 2]  394 	jp	00129$
                                    395 ;	main.c: 128: case CPU_NO_RST:
      00016C                        396 00117$:
                                    397 ;	main.c: 129: if (ev == timer_2){
      00016C 0D 01            [ 1]  398 	tnz	(0x01, sp)
      00016E 26 03            [ 1]  399 	jrne	00204$
      000170 CCr02r15         [ 2]  400 	jp	00129$
      000173                        401 00204$:
                                    402 ;	main.c: 130: GPIO_ResetBits(RESET_CPU);
      000173 4B 80            [ 1]  403 	push	#0x80
      000175 4B 05            [ 1]  404 	push	#0x05
      000177 4B 50            [ 1]  405 	push	#0x50
      000179 CDr00r00         [ 4]  406 	call	_GPIO_ResetBits
      00017C 5B 03            [ 2]  407 	addw	sp, #3
                                    408 ;	main.c: 131: GPIO_SetBits(LED_PWR);
      00017E 4B 01            [ 1]  409 	push	#0x01
      000180 4B 0F            [ 1]  410 	push	#0x0f
      000182 4B 50            [ 1]  411 	push	#0x50
      000184 CDr00r00         [ 4]  412 	call	_GPIO_SetBits
      000187 5B 03            [ 2]  413 	addw	sp, #3
                                    414 ;	main.c: 132: SetTimer(0, TIMER_1_SEC);
      000189 4B 64            [ 1]  415 	push	#0x64
      00018B 4B 00            [ 1]  416 	push	#0x00
      00018D 4B 00            [ 1]  417 	push	#0x00
      00018F CDr00r00         [ 4]  418 	call	_SetTimer
      000192 5B 03            [ 2]  419 	addw	sp, #3
                                    420 ;	main.c: 133: SysCntrl.state = WORK_STATE;
      000194 35 07u00u0B      [ 1]  421 	mov	_SysCntrl+10, #0x07
                                    422 ;	main.c: 135: break;
      000198 20 7B            [ 2]  423 	jra	00129$
                                    424 ;	main.c: 136: case WORK_STATE:
      00019A                        425 00120$:
                                    426 ;	main.c: 137: if (ev == timer_0){
      00019A 4D               [ 1]  427 	tnz	a
      00019B 27 16            [ 1]  428 	jreq	00122$
                                    429 ;	main.c: 138: GPIO_ToggleBits(LED_GOOD);
      00019D 4B 08            [ 1]  430 	push	#0x08
      00019F 4B 00            [ 1]  431 	push	#0x00
      0001A1 4B 50            [ 1]  432 	push	#0x50
      0001A3 CDr00r00         [ 4]  433 	call	_GPIO_ToggleBits
      0001A6 5B 03            [ 2]  434 	addw	sp, #3
                                    435 ;	main.c: 139: SetTimer(0, TIMER_1_SEC);
      0001A8 4B 64            [ 1]  436 	push	#0x64
      0001AA 4B 00            [ 1]  437 	push	#0x00
      0001AC 4B 00            [ 1]  438 	push	#0x00
      0001AE CDr00r00         [ 4]  439 	call	_SetTimer
      0001B1 5B 03            [ 2]  440 	addw	sp, #3
      0001B3                        441 00122$:
                                    442 ;	main.c: 142: if (ev == pwrbtn_off){
      0001B3 7B 04            [ 1]  443 	ld	a, (0x04, sp)
      0001B5 A1 06            [ 1]  444 	cp	a, #0x06
      0001B7 26 5C            [ 1]  445 	jrne	00129$
                                    446 ;	main.c: 143: GPIO_ResetBits(POWER_CPU);
      0001B9 4B 40            [ 1]  447 	push	#0x40
      0001BB 4B 05            [ 1]  448 	push	#0x05
      0001BD 4B 50            [ 1]  449 	push	#0x50
      0001BF CDr00r00         [ 4]  450 	call	_GPIO_ResetBits
      0001C2 5B 03            [ 2]  451 	addw	sp, #3
                                    452 ;	main.c: 144: GPIO_ResetBits(ENABLE_DCDC);
      0001C4 4B 02            [ 1]  453 	push	#0x02
      0001C6 4B 05            [ 1]  454 	push	#0x05
      0001C8 4B 50            [ 1]  455 	push	#0x50
      0001CA CDr00r00         [ 4]  456 	call	_GPIO_ResetBits
      0001CD 5B 03            [ 2]  457 	addw	sp, #3
                                    458 ;	main.c: 145: GPIO_ResetBits(ENABLE_5V);
      0001CF 4B 04            [ 1]  459 	push	#0x04
      0001D1 4B 05            [ 1]  460 	push	#0x05
      0001D3 4B 50            [ 1]  461 	push	#0x50
      0001D5 CDr00r00         [ 4]  462 	call	_GPIO_ResetBits
      0001D8 5B 03            [ 2]  463 	addw	sp, #3
                                    464 ;	main.c: 146: GPIO_ResetBits(PG_SMARC);
      0001DA 4B 08            [ 1]  465 	push	#0x08
      0001DC 4B 05            [ 1]  466 	push	#0x05
      0001DE 4B 50            [ 1]  467 	push	#0x50
      0001E0 CDr00r00         [ 4]  468 	call	_GPIO_ResetBits
      0001E3 5B 03            [ 2]  469 	addw	sp, #3
                                    470 ;	main.c: 147: GPIO_SetBits(LED_GOOD);
      0001E5 4B 08            [ 1]  471 	push	#0x08
      0001E7 4B 00            [ 1]  472 	push	#0x00
      0001E9 4B 50            [ 1]  473 	push	#0x50
      0001EB CDr00r00         [ 4]  474 	call	_GPIO_SetBits
      0001EE 5B 03            [ 2]  475 	addw	sp, #3
                                    476 ;	main.c: 148: SysCntrl.state = WAIT_PWR_BTN;
      0001F0 35 00u00u0B      [ 1]  477 	mov	_SysCntrl+10, #0x00
                                    478 ;	main.c: 149: tick(start);
      0001F4 4B 00            [ 1]  479 	push	#0x00
      0001F6 CDr00r34         [ 4]  480 	call	_tick
      0001F9 84               [ 1]  481 	pop	a
                                    482 ;	main.c: 151: break;
      0001FA 20 19            [ 2]  483 	jra	00129$
                                    484 ;	main.c: 152: case PWR_ERROR:
      0001FC                        485 00125$:
                                    486 ;	main.c: 153: if ( ev == timer_0){
      0001FC 4D               [ 1]  487 	tnz	a
      0001FD 27 16            [ 1]  488 	jreq	00129$
                                    489 ;	main.c: 154: GPIO_ToggleBits(LED_PWR);
      0001FF 4B 01            [ 1]  490 	push	#0x01
      000201 4B 0F            [ 1]  491 	push	#0x0f
      000203 4B 50            [ 1]  492 	push	#0x50
      000205 CDr00r00         [ 4]  493 	call	_GPIO_ToggleBits
      000208 5B 03            [ 2]  494 	addw	sp, #3
                                    495 ;	main.c: 155: SetTimer(0, TIMER_100_MS);
      00020A 4B 0A            [ 1]  496 	push	#0x0a
      00020C 4B 00            [ 1]  497 	push	#0x00
      00020E 4B 00            [ 1]  498 	push	#0x00
      000210 CDr00r00         [ 4]  499 	call	_SetTimer
      000213 5B 03            [ 2]  500 	addw	sp, #3
                                    501 ;	main.c: 158: }
      000215                        502 00129$:
                                    503 ;	main.c: 159: }
      000215 84               [ 1]  504 	pop	a
      000216 81               [ 4]  505 	ret
                                    506 ;	main.c: 161: void ReadInputGpio() {
                                    507 ;	-----------------------------------------
                                    508 ;	 function ReadInputGpio
                                    509 ;	-----------------------------------------
      000217                        510 _ReadInputGpio:
      000217 52 06            [ 2]  511 	sub	sp, #6
                                    512 ;	main.c: 163: SysCntrl.btn_state = GPIO_ReadInputDataBit(PWR_BTN);
      000219 AEr00r0D         [ 2]  513 	ldw	x, #(_SysCntrl + 0)+12
      00021C 1F 01            [ 2]  514 	ldw	(0x01, sp), x
      00021E 4B 04            [ 1]  515 	push	#0x04
      000220 4B 00            [ 1]  516 	push	#0x00
      000222 4B 50            [ 1]  517 	push	#0x50
      000224 CDr00r00         [ 4]  518 	call	_GPIO_ReadInputDataBit
      000227 5B 03            [ 2]  519 	addw	sp, #3
      000229 6B 03            [ 1]  520 	ld	(0x03, sp), a
      00022B 1E 01            [ 2]  521 	ldw	x, (0x01, sp)
      00022D 7B 03            [ 1]  522 	ld	a, (0x03, sp)
      00022F F7               [ 1]  523 	ld	(x), a
                                    524 ;	main.c: 164: SysCntrl.btn_change_time = SysCntrl.Timer;
      000230 AEr00r10         [ 2]  525 	ldw	x, #(_SysCntrl + 0)+15
      000233 1F 04            [ 2]  526 	ldw	(0x04, sp), x
      000235 CEu00u09         [ 2]  527 	ldw	x, _SysCntrl+8
      000238 16 04            [ 2]  528 	ldw	y, (0x04, sp)
      00023A 90 FF            [ 2]  529 	ldw	(y), x
                                    530 ;	main.c: 166: if (SysCntrl.btn_state != SysCntrl.btn_state_prev){
      00023C 1E 01            [ 2]  531 	ldw	x, (0x01, sp)
      00023E F6               [ 1]  532 	ld	a, (x)
      00023F 6B 06            [ 1]  533 	ld	(0x06, sp), a
      000241 AEr00r0C         [ 2]  534 	ldw	x, #(_SysCntrl + 0)+11
      000244 F6               [ 1]  535 	ld	a, (x)
                                    536 ;	main.c: 168: SysCntrl.btn_last_change = SysCntrl.btn_change_time;
      000245 90 AEr00r0E      [ 2]  537 	ldw	y, #(_SysCntrl + 0)+13
                                    538 ;	main.c: 166: if (SysCntrl.btn_state != SysCntrl.btn_state_prev){
      000249 11 03            [ 1]  539 	cp	a, (0x03, sp)
      00024B 27 08            [ 1]  540 	jreq	00102$
                                    541 ;	main.c: 167: SysCntrl.btn_state_prev = SysCntrl.btn_state;
      00024D 7B 06            [ 1]  542 	ld	a, (0x06, sp)
      00024F F7               [ 1]  543 	ld	(x), a
                                    544 ;	main.c: 168: SysCntrl.btn_last_change = SysCntrl.btn_change_time;
      000250 1E 04            [ 2]  545 	ldw	x, (0x04, sp)
      000252 FE               [ 2]  546 	ldw	x, (x)
      000253 90 FF            [ 2]  547 	ldw	(y), x
      000255                        548 00102$:
      000255 1E 04            [ 2]  549 	ldw	x, (0x04, sp)
      000257 FE               [ 2]  550 	ldw	x, (x)
                                    551 ;	main.c: 171: if (SysCntrl.btn_change_time - SysCntrl.btn_last_change >= TIMER_2_SEC){
      000258 90 FE            [ 2]  552 	ldw	y, (y)
      00025A 17 05            [ 2]  553 	ldw	(0x05, sp), y
      00025C 72 F0 05         [ 2]  554 	subw	x, (0x05, sp)
      00025F A3 00 C8         [ 2]  555 	cpw	x, #0x00c8
      000262 25 0D            [ 1]  556 	jrc	00110$
                                    557 ;	main.c: 172: if (SysCntrl.btn_state == RESET){
      000264 1E 01            [ 2]  558 	ldw	x, (0x01, sp)
      000266 F6               [ 1]  559 	ld	a, (x)
      000267 26 18            [ 1]  560 	jrne	00111$
                                    561 ;	main.c: 173: tick(pwrbtn_off);
      000269 4B 06            [ 1]  562 	push	#0x06
      00026B CDr00r34         [ 4]  563 	call	_tick
      00026E 84               [ 1]  564 	pop	a
      00026F 20 10            [ 2]  565 	jra	00111$
      000271                        566 00110$:
                                    567 ;	main.c: 177: if (SysCntrl.btn_change_time - SysCntrl.btn_last_change >= TIMER_50_MS)
      000271 A3 00 05         [ 2]  568 	cpw	x, #0x0005
      000274 25 0B            [ 1]  569 	jrc	00111$
                                    570 ;	main.c: 179: if (SysCntrl.btn_state == RESET){
      000276 1E 01            [ 2]  571 	ldw	x, (0x01, sp)
      000278 F6               [ 1]  572 	ld	a, (x)
      000279 26 06            [ 1]  573 	jrne	00111$
                                    574 ;	main.c: 180: tick(pwrbtn_on);
      00027B 4B 05            [ 1]  575 	push	#0x05
      00027D CDr00r34         [ 4]  576 	call	_tick
      000280 84               [ 1]  577 	pop	a
      000281                        578 00111$:
                                    579 ;	main.c: 186: if( GPIO_ReadInputDataBit(PG_5V) ){
      000281 4B 10            [ 1]  580 	push	#0x10
      000283 4B 05            [ 1]  581 	push	#0x05
      000285 4B 50            [ 1]  582 	push	#0x50
      000287 CDr00r00         [ 4]  583 	call	_GPIO_ReadInputDataBit
      00028A 5B 03            [ 2]  584 	addw	sp, #3
      00028C 4D               [ 1]  585 	tnz	a
      00028D 27 06            [ 1]  586 	jreq	00113$
                                    587 ;	main.c: 187: tick(pgood_5v);
      00028F 4B 07            [ 1]  588 	push	#0x07
      000291 CDr00r34         [ 4]  589 	call	_tick
      000294 84               [ 1]  590 	pop	a
      000295                        591 00113$:
                                    592 ;	main.c: 190: if( GPIO_ReadInputDataBit(CARRIER_PWR_ON) ){
      000295 4B 20            [ 1]  593 	push	#0x20
      000297 4B 05            [ 1]  594 	push	#0x05
      000299 4B 50            [ 1]  595 	push	#0x50
      00029B CDr00r00         [ 4]  596 	call	_GPIO_ReadInputDataBit
      00029E 5B 03            [ 2]  597 	addw	sp, #3
      0002A0 4D               [ 1]  598 	tnz	a
      0002A1 27 06            [ 1]  599 	jreq	00116$
                                    600 ;	main.c: 191: tick(carrier);
      0002A3 4B 08            [ 1]  601 	push	#0x08
      0002A5 CDr00r34         [ 4]  602 	call	_tick
      0002A8 84               [ 1]  603 	pop	a
      0002A9                        604 00116$:
                                    605 ;	main.c: 214: }
      0002A9 5B 06            [ 2]  606 	addw	sp, #6
      0002AB 81               [ 4]  607 	ret
                                    608 ;	main.c: 217: void TimerMatch()
                                    609 ;	-----------------------------------------
                                    610 ;	 function TimerMatch
                                    611 ;	-----------------------------------------
      0002AC                        612 _TimerMatch:
      0002AC 52 02            [ 2]  613 	sub	sp, #2
                                    614 ;	main.c: 219: if (!bMainTimer) {
      0002AE 72 5Du00u00      [ 1]  615 	tnz	_bMainTimer+0
                                    616 ;	main.c: 220: return;
      0002B2 27 63            [ 1]  617 	jreq	00119$
                                    618 ;	main.c: 222: bMainTimer = 0;
      0002B4 72 5Fu00u00      [ 1]  619 	clr	_bMainTimer+0
                                    620 ;	main.c: 223: SysCntrl.Timer++;
      0002B8 90 AEr00r09      [ 2]  621 	ldw	y, #(_SysCntrl + 0)+8
      0002BC 93               [ 1]  622 	ldw	x, y
      0002BD FE               [ 2]  623 	ldw	x, (x)
      0002BE 5C               [ 1]  624 	incw	x
      0002BF 90 FF            [ 2]  625 	ldw	(y), x
                                    626 ;	main.c: 225: if (SysCntrl.Timer_0) {
      0002C1 CEu00u01         [ 2]  627 	ldw	x, _SysCntrl+0
      0002C4 5D               [ 2]  628 	tnzw	x
      0002C5 27 0D            [ 1]  629 	jreq	00106$
                                    630 ;	main.c: 226: SysCntrl.Timer_0--;
      0002C7 5A               [ 2]  631 	decw	x
      0002C8 CFu00u01         [ 2]  632 	ldw	_SysCntrl+0, x
                                    633 ;	main.c: 227: if (!SysCntrl.Timer_0) {
      0002CB 5D               [ 2]  634 	tnzw	x
      0002CC 26 06            [ 1]  635 	jrne	00106$
                                    636 ;	main.c: 228: tick(timer_0);
      0002CE 4B 01            [ 1]  637 	push	#0x01
      0002D0 CDr00r34         [ 4]  638 	call	_tick
      0002D3 84               [ 1]  639 	pop	a
      0002D4                        640 00106$:
                                    641 ;	main.c: 231: if (SysCntrl.Timer_1) {
      0002D4 AEr00r03         [ 2]  642 	ldw	x, #(_SysCntrl + 0)+2
      0002D7 1F 01            [ 2]  643 	ldw	(0x01, sp), x
      0002D9 FE               [ 2]  644 	ldw	x, (x)
      0002DA 27 0E            [ 1]  645 	jreq	00110$
                                    646 ;	main.c: 232: SysCntrl.Timer_1--;
      0002DC 5A               [ 2]  647 	decw	x
      0002DD 16 01            [ 2]  648 	ldw	y, (0x01, sp)
      0002DF 90 FF            [ 2]  649 	ldw	(y), x
                                    650 ;	main.c: 233: if (!SysCntrl.Timer_1) {
      0002E1 5D               [ 2]  651 	tnzw	x
      0002E2 26 06            [ 1]  652 	jrne	00110$
                                    653 ;	main.c: 234: tick(timer_1);
      0002E4 4B 02            [ 1]  654 	push	#0x02
      0002E6 CDr00r34         [ 4]  655 	call	_tick
      0002E9 84               [ 1]  656 	pop	a
      0002EA                        657 00110$:
                                    658 ;	main.c: 237: if (SysCntrl.Timer_2) {
      0002EA 90 AEr00r05      [ 2]  659 	ldw	y, #(_SysCntrl + 0)+4
      0002EE 93               [ 1]  660 	ldw	x, y
      0002EF FE               [ 2]  661 	ldw	x, (x)
      0002F0 27 0C            [ 1]  662 	jreq	00114$
                                    663 ;	main.c: 238: SysCntrl.Timer_2--;
      0002F2 5A               [ 2]  664 	decw	x
      0002F3 90 FF            [ 2]  665 	ldw	(y), x
                                    666 ;	main.c: 239: if (!SysCntrl.Timer_2) {
      0002F5 5D               [ 2]  667 	tnzw	x
      0002F6 26 06            [ 1]  668 	jrne	00114$
                                    669 ;	main.c: 240: tick(timer_2);
      0002F8 4B 03            [ 1]  670 	push	#0x03
      0002FA CDr00r34         [ 4]  671 	call	_tick
      0002FD 84               [ 1]  672 	pop	a
      0002FE                        673 00114$:
                                    674 ;	main.c: 243: if (SysCntrl.Timer_3) {
      0002FE 90 AEr00r07      [ 2]  675 	ldw	y, #(_SysCntrl + 0)+6
      000302 93               [ 1]  676 	ldw	x, y
      000303 FE               [ 2]  677 	ldw	x, (x)
      000304 27 11            [ 1]  678 	jreq	00119$
                                    679 ;	main.c: 244: SysCntrl.Timer_3--;
      000306 5A               [ 2]  680 	decw	x
      000307 1F 01            [ 2]  681 	ldw	(0x01, sp), x
      000309 93               [ 1]  682 	ldw	x, y
      00030A 16 01            [ 2]  683 	ldw	y, (0x01, sp)
      00030C FF               [ 2]  684 	ldw	(x), y
                                    685 ;	main.c: 245: if (!SysCntrl.Timer_3) {
      00030D 1E 01            [ 2]  686 	ldw	x, (0x01, sp)
      00030F 26 06            [ 1]  687 	jrne	00119$
                                    688 ;	main.c: 246: tick(timer_3);
      000311 4B 04            [ 1]  689 	push	#0x04
      000313 CDr00r34         [ 4]  690 	call	_tick
      000316 84               [ 1]  691 	pop	a
      000317                        692 00119$:
                                    693 ;	main.c: 249: }
      000317 5B 02            [ 2]  694 	addw	sp, #2
      000319 81               [ 4]  695 	ret
                                    696 ;	main.c: 261: INTERRUPT_HANDLER(IRQ_Handler_TIM4, 25)
                                    697 ;	-----------------------------------------
                                    698 ;	 function IRQ_Handler_TIM4
                                    699 ;	-----------------------------------------
      00031A                        700 _IRQ_Handler_TIM4:
      00031A 4F               [ 1]  701 	clr	a
      00031B 62               [ 2]  702 	div	x, a
                                    703 ;	main.c: 263: bMainTimer = 1;
      00031C 35 01u00u00      [ 1]  704 	mov	_bMainTimer+0, #0x01
                                    705 ;	main.c: 265: TIM4_ClearITPendingBit(TIM4_IT_Update);
      000320 4B 01            [ 1]  706 	push	#0x01
      000322 CDr00r00         [ 4]  707 	call	_TIM4_ClearITPendingBit
      000325 84               [ 1]  708 	pop	a
                                    709 ;	main.c: 266: }
      000326 80               [11]  710 	iret
                                    711 ;	main.c: 268: int main( void )
                                    712 ;	-----------------------------------------
                                    713 ;	 function main
                                    714 ;	-----------------------------------------
      000327                        715 _main:
                                    716 ;	main.c: 270: disableInterrupts();
      000327 9B               [ 1]  717 	sim;	
                                    718 ;	main.c: 272: GPIO_DeInit(GPIOA);
      000328 4B 00            [ 1]  719 	push	#0x00
      00032A 4B 50            [ 1]  720 	push	#0x50
      00032C CDr00r00         [ 4]  721 	call	_GPIO_DeInit
      00032F 5B 02            [ 2]  722 	addw	sp, #2
                                    723 ;	main.c: 273: GPIO_DeInit(GPIOB);
      000331 4B 05            [ 1]  724 	push	#0x05
      000333 4B 50            [ 1]  725 	push	#0x50
      000335 CDr00r00         [ 4]  726 	call	_GPIO_DeInit
      000338 5B 02            [ 2]  727 	addw	sp, #2
                                    728 ;	main.c: 274: GPIO_DeInit(GPIOC);
      00033A 4B 0A            [ 1]  729 	push	#0x0a
      00033C 4B 50            [ 1]  730 	push	#0x50
      00033E CDr00r00         [ 4]  731 	call	_GPIO_DeInit
      000341 5B 02            [ 2]  732 	addw	sp, #2
                                    733 ;	main.c: 275: GPIO_DeInit(GPIOD);
      000343 4B 0F            [ 1]  734 	push	#0x0f
      000345 4B 50            [ 1]  735 	push	#0x50
      000347 CDr00r00         [ 4]  736 	call	_GPIO_DeInit
      00034A 5B 02            [ 2]  737 	addw	sp, #2
                                    738 ;	main.c: 277: GPIO_Init(LED_GOOD, GPIO_Mode_Out_PP_High_Fast);
      00034C 4B F0            [ 1]  739 	push	#0xf0
      00034E 4B 08            [ 1]  740 	push	#0x08
      000350 4B 00            [ 1]  741 	push	#0x00
      000352 4B 50            [ 1]  742 	push	#0x50
      000354 CDr00r00         [ 4]  743 	call	_GPIO_Init
      000357 5B 04            [ 2]  744 	addw	sp, #4
                                    745 ;	main.c: 278: GPIO_Init(LED_PWR, GPIO_Mode_Out_PP_Low_Fast);
      000359 4B E0            [ 1]  746 	push	#0xe0
      00035B 4B 01            [ 1]  747 	push	#0x01
      00035D 4B 0F            [ 1]  748 	push	#0x0f
      00035F 4B 50            [ 1]  749 	push	#0x50
      000361 CDr00r00         [ 4]  750 	call	_GPIO_Init
      000364 5B 04            [ 2]  751 	addw	sp, #4
                                    752 ;	main.c: 279: GPIO_Init(ENABLE_DCDC, GPIO_Mode_Out_PP_Low_Fast);
      000366 4B E0            [ 1]  753 	push	#0xe0
      000368 4B 02            [ 1]  754 	push	#0x02
      00036A 4B 05            [ 1]  755 	push	#0x05
      00036C 4B 50            [ 1]  756 	push	#0x50
      00036E CDr00r00         [ 4]  757 	call	_GPIO_Init
      000371 5B 04            [ 2]  758 	addw	sp, #4
                                    759 ;	main.c: 280: GPIO_Init(ENABLE_5V, GPIO_Mode_Out_PP_Low_Fast);
      000373 4B E0            [ 1]  760 	push	#0xe0
      000375 4B 04            [ 1]  761 	push	#0x04
      000377 4B 05            [ 1]  762 	push	#0x05
      000379 4B 50            [ 1]  763 	push	#0x50
      00037B CDr00r00         [ 4]  764 	call	_GPIO_Init
      00037E 5B 04            [ 2]  765 	addw	sp, #4
                                    766 ;	main.c: 281: GPIO_Init(PG_SMARC, GPIO_Mode_Out_PP_Low_Fast);
      000380 4B E0            [ 1]  767 	push	#0xe0
      000382 4B 08            [ 1]  768 	push	#0x08
      000384 4B 05            [ 1]  769 	push	#0x05
      000386 4B 50            [ 1]  770 	push	#0x50
      000388 CDr00r00         [ 4]  771 	call	_GPIO_Init
      00038B 5B 04            [ 2]  772 	addw	sp, #4
                                    773 ;	main.c: 282: GPIO_Init(POWER_CPU, GPIO_Mode_Out_PP_Low_Fast);
      00038D 4B E0            [ 1]  774 	push	#0xe0
      00038F 4B 40            [ 1]  775 	push	#0x40
      000391 4B 05            [ 1]  776 	push	#0x05
      000393 4B 50            [ 1]  777 	push	#0x50
      000395 CDr00r00         [ 4]  778 	call	_GPIO_Init
      000398 5B 04            [ 2]  779 	addw	sp, #4
                                    780 ;	main.c: 283: GPIO_Init(RESET_CPU, GPIO_Mode_Out_PP_Low_Fast);
      00039A 4B E0            [ 1]  781 	push	#0xe0
      00039C 4B 80            [ 1]  782 	push	#0x80
      00039E 4B 05            [ 1]  783 	push	#0x05
      0003A0 4B 50            [ 1]  784 	push	#0x50
      0003A2 CDr00r00         [ 4]  785 	call	_GPIO_Init
      0003A5 5B 04            [ 2]  786 	addw	sp, #4
                                    787 ;	main.c: 284: GPIO_Init(WDOG_OUT, GPIO_Mode_Out_PP_Low_Fast);
      0003A7 4B E0            [ 1]  788 	push	#0xe0
      0003A9 4B 10            [ 1]  789 	push	#0x10
      0003AB 4B 0A            [ 1]  790 	push	#0x0a
      0003AD 4B 50            [ 1]  791 	push	#0x50
      0003AF CDr00r00         [ 4]  792 	call	_GPIO_Init
      0003B2 5B 04            [ 2]  793 	addw	sp, #4
                                    794 ;	main.c: 286: GPIO_Init(PWR_BTN, GPIO_Mode_In_PU_No_IT);
      0003B4 4B 40            [ 1]  795 	push	#0x40
      0003B6 4B 04            [ 1]  796 	push	#0x04
      0003B8 4B 00            [ 1]  797 	push	#0x00
      0003BA 4B 50            [ 1]  798 	push	#0x50
      0003BC CDr00r00         [ 4]  799 	call	_GPIO_Init
      0003BF 5B 04            [ 2]  800 	addw	sp, #4
                                    801 ;	main.c: 287: GPIO_Init(PG_5V, GPIO_Mode_In_PU_No_IT);
      0003C1 4B 40            [ 1]  802 	push	#0x40
      0003C3 4B 10            [ 1]  803 	push	#0x10
      0003C5 4B 05            [ 1]  804 	push	#0x05
      0003C7 4B 50            [ 1]  805 	push	#0x50
      0003C9 CDr00r00         [ 4]  806 	call	_GPIO_Init
      0003CC 5B 04            [ 2]  807 	addw	sp, #4
                                    808 ;	main.c: 288: GPIO_Init(CARRIER_PWR_ON, GPIO_Mode_In_PU_No_IT);
      0003CE 4B 40            [ 1]  809 	push	#0x40
      0003D0 4B 20            [ 1]  810 	push	#0x20
      0003D2 4B 05            [ 1]  811 	push	#0x05
      0003D4 4B 50            [ 1]  812 	push	#0x50
      0003D6 CDr00r00         [ 4]  813 	call	_GPIO_Init
      0003D9 5B 04            [ 2]  814 	addw	sp, #4
                                    815 ;	main.c: 289: GPIO_Init(WDOG_IN, GPIO_Mode_In_PU_No_IT);
      0003DB 4B 40            [ 1]  816 	push	#0x40
      0003DD 4B 01            [ 1]  817 	push	#0x01
      0003DF 4B 05            [ 1]  818 	push	#0x05
      0003E1 4B 50            [ 1]  819 	push	#0x50
      0003E3 CDr00r00         [ 4]  820 	call	_GPIO_Init
      0003E6 5B 04            [ 2]  821 	addw	sp, #4
                                    822 ;	main.c: 293: CLK_DeInit();
      0003E8 CDr00r00         [ 4]  823 	call	_CLK_DeInit
                                    824 ;	main.c: 294: CLK_SYSCLKDivConfig(CLK_SYSCLKDiv_1);
      0003EB 4B 00            [ 1]  825 	push	#0x00
      0003ED CDr00r00         [ 4]  826 	call	_CLK_SYSCLKDivConfig
      0003F0 84               [ 1]  827 	pop	a
                                    828 ;	main.c: 295: CLK_PeripheralClockConfig(CLK_Peripheral_TIM4, ENABLE);
      0003F1 4B 01            [ 1]  829 	push	#0x01
      0003F3 4B 02            [ 1]  830 	push	#0x02
      0003F5 CDr00r00         [ 4]  831 	call	_CLK_PeripheralClockConfig
      0003F8 5B 02            [ 2]  832 	addw	sp, #2
                                    833 ;	main.c: 296: CLK_PeripheralClockConfig(CLK_Peripheral_USART1, ENABLE);
      0003FA 4B 01            [ 1]  834 	push	#0x01
      0003FC 4B 05            [ 1]  835 	push	#0x05
      0003FE CDr00r00         [ 4]  836 	call	_CLK_PeripheralClockConfig
      000401 5B 02            [ 2]  837 	addw	sp, #2
                                    838 ;	main.c: 298: TIM4_DeInit();
      000403 CDr00r00         [ 4]  839 	call	_TIM4_DeInit
                                    840 ;	main.c: 304: TIM4_Cmd(DISABLE); 
      000406 4B 00            [ 1]  841 	push	#0x00
      000408 CDr00r00         [ 4]  842 	call	_TIM4_Cmd
      00040B 84               [ 1]  843 	pop	a
                                    844 ;	main.c: 305: TIM4_TimeBaseInit(TIM4_Prescaler_1024, 156);
      00040C 4B 9C            [ 1]  845 	push	#0x9c
      00040E 4B 0A            [ 1]  846 	push	#0x0a
      000410 CDr00r00         [ 4]  847 	call	_TIM4_TimeBaseInit
      000413 5B 02            [ 2]  848 	addw	sp, #2
                                    849 ;	main.c: 306: TIM4_ClearFlag(TIM4_FLAG_Update);
      000415 4B 01            [ 1]  850 	push	#0x01
      000417 CDr00r00         [ 4]  851 	call	_TIM4_ClearFlag
      00041A 84               [ 1]  852 	pop	a
                                    853 ;	main.c: 307: TIM4_ITConfig(TIM4_IT_Update, ENABLE);
      00041B 4B 01            [ 1]  854 	push	#0x01
      00041D 4B 01            [ 1]  855 	push	#0x01
      00041F CDr00r00         [ 4]  856 	call	_TIM4_ITConfig
      000422 5B 02            [ 2]  857 	addw	sp, #2
                                    858 ;	main.c: 308: TIM4_Cmd(ENABLE);       // let's go
      000424 4B 01            [ 1]  859 	push	#0x01
      000426 CDr00r00         [ 4]  860 	call	_TIM4_Cmd
      000429 84               [ 1]  861 	pop	a
                                    862 ;	main.c: 309: enableInterrupts();
      00042A 9A               [ 1]  863 	rim;	
                                    864 ;	main.c: 312: bMainTimer = 0;
      00042B 72 5Fu00u00      [ 1]  865 	clr	_bMainTimer+0
                                    866 ;	main.c: 314: SysCntrl.btn_state = SET;
      00042F AEr00r0D         [ 2]  867 	ldw	x, #(_SysCntrl + 0)+12
      000432 A6 01            [ 1]  868 	ld	a, #0x01
      000434 F7               [ 1]  869 	ld	(x), a
                                    870 ;	main.c: 315: SysCntrl.btn_state_prev = SET;
      000435 AEr00r0C         [ 2]  871 	ldw	x, #(_SysCntrl + 0)+11
      000438 A6 01            [ 1]  872 	ld	a, #0x01
      00043A F7               [ 1]  873 	ld	(x), a
                                    874 ;	main.c: 316: SysCntrl.btn_change_time = 0;
      00043B AEr00r10         [ 2]  875 	ldw	x, #(_SysCntrl + 0)+15
      00043E 6F 01            [ 1]  876 	clr	(0x1, x)
      000440 7F               [ 1]  877 	clr	(x)
                                    878 ;	main.c: 317: SysCntrl.btn_last_change = 0;
      000441 AEr00r0E         [ 2]  879 	ldw	x, #(_SysCntrl + 0)+13
      000444 6F 01            [ 1]  880 	clr	(0x1, x)
      000446 7F               [ 1]  881 	clr	(x)
                                    882 ;	main.c: 319: tick(start);
      000447 4B 00            [ 1]  883 	push	#0x00
      000449 CDr00r34         [ 4]  884 	call	_tick
      00044C 84               [ 1]  885 	pop	a
                                    886 ;	main.c: 320: while (1) {
      00044D                        887 00102$:
                                    888 ;	main.c: 321: ReadInputGpio();
      00044D CDr02r17         [ 4]  889 	call	_ReadInputGpio
                                    890 ;	main.c: 322: TimerMatch();
      000450 CDr02rAC         [ 4]  891 	call	_TimerMatch
      000453 20 F8            [ 2]  892 	jra	00102$
                                    893 ;	main.c: 326: }
      000455 81               [ 4]  894 	ret
                                    895 	.area CODE
                                    896 	.area CONST
                                    897 	.area INITIALIZER
                                    898 	.area CABS (ABS)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _IRQ_Handler_TIM4
                                     13 	.globl _TimerMatch
                                     14 	.globl _ReadInputGpio
                                     15 	.globl _BtnAction
                                     16 	.globl _tick
                                     17 	.globl _SetTimer
                                     18 	.globl _TIM4_ClearITPendingBit
                                     19 	.globl _TIM4_ClearFlag
                                     20 	.globl _TIM4_ITConfig
                                     21 	.globl _TIM4_Cmd
                                     22 	.globl _TIM4_TimeBaseInit
                                     23 	.globl _TIM4_DeInit
                                     24 	.globl _CLK_PeripheralClockConfig
                                     25 	.globl _CLK_SYSCLKDivConfig
                                     26 	.globl _CLK_DeInit
                                     27 	.globl _GPIO_ReadInputDataBit
                                     28 	.globl _GPIO_ToggleBits
                                     29 	.globl _GPIO_ResetBits
                                     30 	.globl _GPIO_SetBits
                                     31 	.globl _GPIO_Init
                                     32 	.globl _GPIO_DeInit
                                     33 	.globl _SysCntrl
                                     34 	.globl _bMainTimer
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area DATA
      000000                         39 _bMainTimer::
      000000                         40 	.ds 1
      000001                         41 _SysCntrl::
      000001                         42 	.ds 22
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area INITIALIZED
                                     47 ;--------------------------------------------------------
                                     48 ; Stack segment in internal ram
                                     49 ;--------------------------------------------------------
                                     50 	.area	SSEG
      000000                         51 __start__stack:
      000000                         52 	.ds	1
                                     53 
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area DABS (ABS)
                                     58 
                                     59 ; default segment ordering for linker
                                     60 	.area HOME
                                     61 	.area GSINIT
                                     62 	.area GSFINAL
                                     63 	.area CONST
                                     64 	.area INITIALIZER
                                     65 	.area CODE
                                     66 
                                     67 ;--------------------------------------------------------
                                     68 ; interrupt vector
                                     69 ;--------------------------------------------------------
                                     70 	.area HOME
      000000                         71 __interrupt_vect:
      000000 82v00u00u00             72 	int s_GSINIT ; reset
      000004 82 00 00 00             73 	int 0x000000 ; trap
      000008 82 00 00 00             74 	int 0x000000 ; int0
      00000C 82 00 00 00             75 	int 0x000000 ; int1
      000010 82 00 00 00             76 	int 0x000000 ; int2
      000014 82 00 00 00             77 	int 0x000000 ; int3
      000018 82 00 00 00             78 	int 0x000000 ; int4
      00001C 82 00 00 00             79 	int 0x000000 ; int5
      000020 82 00 00 00             80 	int 0x000000 ; int6
      000024 82 00 00 00             81 	int 0x000000 ; int7
      000028 82 00 00 00             82 	int 0x000000 ; int8
      00002C 82 00 00 00             83 	int 0x000000 ; int9
      000030 82 00 00 00             84 	int 0x000000 ; int10
      000034 82 00 00 00             85 	int 0x000000 ; int11
      000038 82 00 00 00             86 	int 0x000000 ; int12
      00003C 82 00 00 00             87 	int 0x000000 ; int13
      000040 82 00 00 00             88 	int 0x000000 ; int14
      000044 82 00 00 00             89 	int 0x000000 ; int15
      000048 82 00 00 00             90 	int 0x000000 ; int16
      00004C 82 00 00 00             91 	int 0x000000 ; int17
      000050 82 00 00 00             92 	int 0x000000 ; int18
      000054 82 00 00 00             93 	int 0x000000 ; int19
      000058 82 00 00 00             94 	int 0x000000 ; int20
      00005C 82 00 00 00             95 	int 0x000000 ; int21
      000060 82 00 00 00             96 	int 0x000000 ; int22
      000064 82 00 00 00             97 	int 0x000000 ; int23
      000068 82 00 00 00             98 	int 0x000000 ; int24
      00006C 82v00u02uE6             99 	int _IRQ_Handler_TIM4 ; int25
                                    100 ;--------------------------------------------------------
                                    101 ; global & static initialisations
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area GSINIT
                                    105 	.area GSFINAL
                                    106 	.area GSINIT
      000000                        107 __sdcc_init_data:
                                    108 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  109 	ldw x, #l_DATA
      000003 27 07            [ 1]  110 	jreq	00002$
      000005                        111 00001$:
      000005 72 4FuFFuFF      [ 1]  112 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  113 	decw x
      00000A 26 F9            [ 1]  114 	jrne	00001$
      00000C                        115 00002$:
      00000C AEr00r00         [ 2]  116 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  117 	jreq	00004$
      000011                        118 00003$:
      000011 D6uFFuFF         [ 1]  119 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  120 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  121 	decw	x
      000018 26 F7            [ 1]  122 	jrne	00003$
      00001A                        123 00004$:
                                    124 ; stm8_genXINIT() end
                                    125 	.area GSFINAL
      000000 CCr00r70         [ 2]  126 	jp	__sdcc_program_startup
                                    127 ;--------------------------------------------------------
                                    128 ; Home
                                    129 ;--------------------------------------------------------
                                    130 	.area HOME
                                    131 	.area HOME
      000070                        132 __sdcc_program_startup:
      000070 CCr02rF2         [ 2]  133 	jp	_main
                                    134 ;	return from main will return to caller
                                    135 ;--------------------------------------------------------
                                    136 ; code
                                    137 ;--------------------------------------------------------
                                    138 	.area CODE
                                    139 ;	main.c: 39: void SetTimer(uint8_t tmr, unsigned int value)
                                    140 ;	-----------------------------------------
                                    141 ;	 function SetTimer
                                    142 ;	-----------------------------------------
      000000                        143 _SetTimer:
                                    144 ;	main.c: 41: switch (tmr) {
      000000 A1 00            [ 1]  145 	cp	a, #0x00
      000002 27 09            [ 1]  146 	jreq	00101$
      000004 A1 01            [ 1]  147 	cp	a, #0x01
      000006 27 09            [ 1]  148 	jreq	00102$
      000008 A1 02            [ 1]  149 	cp	a, #0x02
      00000A 27 09            [ 1]  150 	jreq	00103$
      00000C 81               [ 4]  151 	ret
                                    152 ;	main.c: 42: case 0:
      00000D                        153 00101$:
                                    154 ;	main.c: 43: SysCntrl.Timer_0 = value;
      00000D CFu00u01         [ 2]  155 	ldw	_SysCntrl+0, x
                                    156 ;	main.c: 44: break;
      000010 81               [ 4]  157 	ret
                                    158 ;	main.c: 45: case 1:
      000011                        159 00102$:
                                    160 ;	main.c: 46: SysCntrl.Timer_1 = value;
      000011 CFu00u03         [ 2]  161 	ldw	_SysCntrl+2, x
                                    162 ;	main.c: 47: break;
      000014 81               [ 4]  163 	ret
                                    164 ;	main.c: 48: case 2:
      000015                        165 00103$:
                                    166 ;	main.c: 49: SysCntrl.Timer_2 = value;
      000015 CFu00u05         [ 2]  167 	ldw	_SysCntrl+4, x
                                    168 ;	main.c: 51: }
                                    169 ;	main.c: 52: }
      000018 81               [ 4]  170 	ret
                                    171 ;	main.c: 54: void tick(enum event_t ev)
                                    172 ;	-----------------------------------------
                                    173 ;	 function tick
                                    174 ;	-----------------------------------------
      000019                        175 _tick:
      000019 52 03            [ 2]  176 	sub	sp, #3
      00001B 6B 03            [ 1]  177 	ld	(0x03, sp), a
                                    178 ;	main.c: 56: switch (SysCntrl.state) {
      00001D C6u00u09         [ 1]  179 	ld	a, _SysCntrl+8
      000020 97               [ 1]  180 	ld	xl, a
      000021 A1 08            [ 1]  181 	cp	a, #0x08
      000023 23 03            [ 2]  182 	jrule	00215$
      000025 CCr01rED         [ 2]  183 	jp	00138$
      000028                        184 00215$:
                                    185 ;	main.c: 68: SysCntrl.bootmode = 1;
                                    186 ;	main.c: 72: if( ev == timer_2){
      000028 7B 03            [ 1]  187 	ld	a, (0x03, sp)
      00002A A0 03            [ 1]  188 	sub	a, #0x03
      00002C 26 04            [ 1]  189 	jrne	00217$
      00002E 4C               [ 1]  190 	inc	a
      00002F 6B 01            [ 1]  191 	ld	(0x01, sp), a
      000031 C5                     192 	.byte 0xc5
      000032                        193 00217$:
      000032 0F 01            [ 1]  194 	clr	(0x01, sp)
      000034                        195 00218$:
                                    196 ;	main.c: 134: if (ev == timer_0){
      000034 7B 03            [ 1]  197 	ld	a, (0x03, sp)
      000036 4A               [ 1]  198 	dec	a
      000037 26 05            [ 1]  199 	jrne	00220$
      000039 A6 01            [ 1]  200 	ld	a, #0x01
      00003B 6B 02            [ 1]  201 	ld	(0x02, sp), a
      00003D C5                     202 	.byte 0xc5
      00003E                        203 00220$:
      00003E 0F 02            [ 1]  204 	clr	(0x02, sp)
      000040                        205 00221$:
                                    206 ;	main.c: 56: switch (SysCntrl.state) {
      000040 4F               [ 1]  207 	clr	a
      000041 95               [ 1]  208 	ld	xh, a
      000042 58               [ 2]  209 	sllw	x
      000043 DEu00u47         [ 2]  210 	ldw	x, (#00222$, x)
      000046 FC               [ 2]  211 	jp	(x)
      000047                        212 00222$:
      000047r00r59                  213 	.dw	#00101$
      000049r01rED                  214 	.dw	#00138$
      00004Br00rD4                  215 	.dw	#00112$
      00004Dr00rFA                  216 	.dw	#00115$
      00004Fr01rD8                  217 	.dw	#00134$
      000051r01r18                  218 	.dw	#00118$
      000053r01r3E                  219 	.dw	#00121$
      000055r01r64                  220 	.dw	#00124$
      000057r01r85                  221 	.dw	#00129$
                                    222 ;	main.c: 57: case WAIT_PWR_BTN:
      000059                        223 00101$:
                                    224 ;	main.c: 58: if (ev == start) {
      000059 0D 03            [ 1]  225 	tnz	(0x03, sp)
      00005B 26 08            [ 1]  226 	jrne	00103$
                                    227 ;	main.c: 59: SetTimer(1, TIMER_1_SEC);
      00005D AE 00 64         [ 2]  228 	ldw	x, #0x0064
      000060 A6 01            [ 1]  229 	ld	a, #0x01
      000062 CDr00r00         [ 4]  230 	call	_SetTimer
      000065                        231 00103$:
                                    232 ;	main.c: 62: if ( ev == timer_1){
      000065 7B 03            [ 1]  233 	ld	a, (0x03, sp)
                                    234 ;	main.c: 63: GPIO_ToggleBits(LED_PWR);
      000067 A0 02            [ 1]  235 	sub	a, #0x02
      000069 26 0F            [ 1]  236 	jrne	00105$
      00006B 4C               [ 1]  237 	inc	a
      00006C AE 50 0F         [ 2]  238 	ldw	x, #0x500f
      00006F CDr00r00         [ 4]  239 	call	_GPIO_ToggleBits
                                    240 ;	main.c: 64: SetTimer(1, TIMER_1_SEC);
      000072 AE 00 64         [ 2]  241 	ldw	x, #0x0064
      000075 A6 01            [ 1]  242 	ld	a, #0x01
      000077 CDr00r00         [ 4]  243 	call	_SetTimer
      00007A                        244 00105$:
                                    245 ;	main.c: 66: if (ev == cpu_bootrom){
      00007A 7B 03            [ 1]  246 	ld	a, (0x03, sp)
      00007C A1 08            [ 1]  247 	cp	a, #0x08
      00007E 26 14            [ 1]  248 	jrne	00107$
                                    249 ;	main.c: 67: GPIO_SetBits(SMARC_BOOTMODE);
      000080 A6 20            [ 1]  250 	ld	a, #0x20
      000082 AE 50 0A         [ 2]  251 	ldw	x, #0x500a
      000085 CDr00r00         [ 4]  252 	call	_GPIO_SetBits
                                    253 ;	main.c: 68: SysCntrl.bootmode = 1;
      000088 35 01u00u13      [ 1]  254 	mov	_SysCntrl+18, #0x01
                                    255 ;	main.c: 70: SetTimer(2, TIMER_1_SEC);
      00008C AE 00 64         [ 2]  256 	ldw	x, #0x0064
      00008F A6 02            [ 1]  257 	ld	a, #0x02
      000091 CDr00r00         [ 4]  258 	call	_SetTimer
      000094                        259 00107$:
                                    260 ;	main.c: 72: if( ev == timer_2){
      000094 0D 01            [ 1]  261 	tnz	(0x01, sp)
      000096 27 05            [ 1]  262 	jreq	00109$
                                    263 ;	main.c: 73: tick(pwrbtn_on);
      000098 A6 04            [ 1]  264 	ld	a, #0x04
      00009A CDr00r19         [ 4]  265 	call	_tick
      00009D                        266 00109$:
                                    267 ;	main.c: 75: if (ev == pwrbtn_on) {
      00009D 7B 03            [ 1]  268 	ld	a, (0x03, sp)
      00009F A1 04            [ 1]  269 	cp	a, #0x04
      0000A1 27 03            [ 1]  270 	jreq	00233$
      0000A3 CCr01rED         [ 2]  271 	jp	00138$
      0000A6                        272 00233$:
                                    273 ;	main.c: 76: GPIO_SetBits(LED_PWR);
      0000A6 A6 01            [ 1]  274 	ld	a, #0x01
      0000A8 AE 50 0F         [ 2]  275 	ldw	x, #0x500f
      0000AB CDr00r00         [ 4]  276 	call	_GPIO_SetBits
                                    277 ;	main.c: 77: GPIO_SetBits(ENABLE_5V); // delay between ENABLE_5V and POWER_CPU should be < 200ms
      0000AE A6 04            [ 1]  278 	ld	a, #0x04
      0000B0 AE 50 05         [ 2]  279 	ldw	x, #0x5005
      0000B3 CDr00r00         [ 4]  280 	call	_GPIO_SetBits
                                    281 ;	main.c: 78: GPIO_SetBits(RESET_CPU);
      0000B6 A6 80            [ 1]  282 	ld	a, #0x80
      0000B8 AE 50 05         [ 2]  283 	ldw	x, #0x5005
      0000BB CDr00r00         [ 4]  284 	call	_GPIO_SetBits
                                    285 ;	main.c: 80: SetTimer(0, TIMER_500_MS);
      0000BE AE 00 32         [ 2]  286 	ldw	x, #0x0032
      0000C1 4F               [ 1]  287 	clr	a
      0000C2 CDr00r00         [ 4]  288 	call	_SetTimer
                                    289 ;	main.c: 82: SetTimer(2, TIMER_50_MS);
      0000C5 AE 00 05         [ 2]  290 	ldw	x, #0x0005
      0000C8 A6 02            [ 1]  291 	ld	a, #0x02
      0000CA CDr00r00         [ 4]  292 	call	_SetTimer
                                    293 ;	main.c: 83: SysCntrl.state = WAIT_PGOOD;
      0000CD 35 02u00u09      [ 1]  294 	mov	_SysCntrl+8, #0x02
                                    295 ;	main.c: 85: break;
      0000D1 CCr01rED         [ 2]  296 	jp	00138$
                                    297 ;	main.c: 86: case WAIT_PGOOD:
      0000D4                        298 00112$:
                                    299 ;	main.c: 88: if( ev == timer_2){
      0000D4 0D 01            [ 1]  300 	tnz	(0x01, sp)
      0000D6 26 03            [ 1]  301 	jrne	00234$
      0000D8 CCr01rED         [ 2]  302 	jp	00138$
      0000DB                        303 00234$:
                                    304 ;	main.c: 89: GPIO_ResetBits(LED_GOOD);
      0000DB A6 08            [ 1]  305 	ld	a, #0x08
      0000DD AE 50 00         [ 2]  306 	ldw	x, #0x5000
      0000E0 CDr00r00         [ 4]  307 	call	_GPIO_ResetBits
                                    308 ;	main.c: 90: GPIO_SetBits(PG_SMARC);
      0000E3 A6 08            [ 1]  309 	ld	a, #0x08
      0000E5 AE 50 05         [ 2]  310 	ldw	x, #0x5005
      0000E8 CDr00r00         [ 4]  311 	call	_GPIO_SetBits
                                    312 ;	main.c: 91: SetTimer(2, TIMER_50_MS);
      0000EB AE 00 05         [ 2]  313 	ldw	x, #0x0005
      0000EE A6 02            [ 1]  314 	ld	a, #0x02
      0000F0 CDr00r00         [ 4]  315 	call	_SetTimer
                                    316 ;	main.c: 92: SysCntrl.state = WAIT_CARRIER_ON;
      0000F3 35 03u00u09      [ 1]  317 	mov	_SysCntrl+8, #0x03
                                    318 ;	main.c: 95: break;
      0000F7 CCr01rED         [ 2]  319 	jp	00138$
                                    320 ;	main.c: 96: case WAIT_CARRIER_ON:
      0000FA                        321 00115$:
                                    322 ;	main.c: 98: if( ev == timer_2){
      0000FA 0D 01            [ 1]  323 	tnz	(0x01, sp)
      0000FC 26 03            [ 1]  324 	jrne	00235$
      0000FE CCr01rED         [ 2]  325 	jp	00138$
      000101                        326 00235$:
                                    327 ;	main.c: 99: GPIO_SetBits(ENABLE_DCDC);
      000101 A6 02            [ 1]  328 	ld	a, #0x02
      000103 AE 50 05         [ 2]  329 	ldw	x, #0x5005
      000106 CDr00r00         [ 4]  330 	call	_GPIO_SetBits
                                    331 ;	main.c: 100: SetTimer(2, TIMER_50_MS);
      000109 AE 00 05         [ 2]  332 	ldw	x, #0x0005
      00010C A6 02            [ 1]  333 	ld	a, #0x02
      00010E CDr00r00         [ 4]  334 	call	_SetTimer
                                    335 ;	main.c: 101: SysCntrl.state = CPU_START;
      000111 35 05u00u09      [ 1]  336 	mov	_SysCntrl+8, #0x05
                                    337 ;	main.c: 103: break;
      000115 CCr01rED         [ 2]  338 	jp	00138$
                                    339 ;	main.c: 104: case CPU_START:
      000118                        340 00118$:
                                    341 ;	main.c: 105: if (ev == timer_2){
      000118 0D 01            [ 1]  342 	tnz	(0x01, sp)
      00011A 26 03            [ 1]  343 	jrne	00236$
      00011C CCr01rED         [ 2]  344 	jp	00138$
      00011F                        345 00236$:
                                    346 ;	main.c: 106: GPIO_SetBits(POWER_CPU); // delay between ENABLE_5V and POWER_CPU should be < 200ms
      00011F A6 40            [ 1]  347 	ld	a, #0x40
      000121 AE 50 05         [ 2]  348 	ldw	x, #0x5005
      000124 CDr00r00         [ 4]  349 	call	_GPIO_SetBits
                                    350 ;	main.c: 107: GPIO_SetBits(LED_PWR);
      000127 A6 01            [ 1]  351 	ld	a, #0x01
      000129 AE 50 0F         [ 2]  352 	ldw	x, #0x500f
      00012C CDr00r00         [ 4]  353 	call	_GPIO_SetBits
                                    354 ;	main.c: 108: SetTimer(2, TIMER_50_MS); 
      00012F AE 00 05         [ 2]  355 	ldw	x, #0x0005
      000132 A6 02            [ 1]  356 	ld	a, #0x02
      000134 CDr00r00         [ 4]  357 	call	_SetTimer
                                    358 ;	main.c: 109: SysCntrl.state = CPU_NO_RST;
      000137 35 06u00u09      [ 1]  359 	mov	_SysCntrl+8, #0x06
                                    360 ;	main.c: 111: break;
      00013B CCr01rED         [ 2]  361 	jp	00138$
                                    362 ;	main.c: 112: case CPU_NO_RST:
      00013E                        363 00121$:
                                    364 ;	main.c: 113: if (ev == timer_2){
      00013E 0D 01            [ 1]  365 	tnz	(0x01, sp)
      000140 26 03            [ 1]  366 	jrne	00237$
      000142 CCr01rED         [ 2]  367 	jp	00138$
      000145                        368 00237$:
                                    369 ;	main.c: 114: GPIO_ResetBits(RESET_CPU);
      000145 A6 80            [ 1]  370 	ld	a, #0x80
      000147 AE 50 05         [ 2]  371 	ldw	x, #0x5005
      00014A CDr00r00         [ 4]  372 	call	_GPIO_ResetBits
                                    373 ;	main.c: 115: GPIO_SetBits(LED_PWR);
      00014D A6 01            [ 1]  374 	ld	a, #0x01
      00014F AE 50 0F         [ 2]  375 	ldw	x, #0x500f
      000152 CDr00r00         [ 4]  376 	call	_GPIO_SetBits
                                    377 ;	main.c: 116: SetTimer(2, TIMER_50_MS);
      000155 AE 00 05         [ 2]  378 	ldw	x, #0x0005
      000158 A6 02            [ 1]  379 	ld	a, #0x02
      00015A CDr00r00         [ 4]  380 	call	_SetTimer
                                    381 ;	main.c: 117: SysCntrl.state = WORK_STATE;
      00015D 35 08u00u09      [ 1]  382 	mov	_SysCntrl+8, #0x08
                                    383 ;	main.c: 119: break;
      000161 CCr01rED         [ 2]  384 	jp	00138$
                                    385 ;	main.c: 120: case CHECK_BOOTMODE:
      000164                        386 00124$:
                                    387 ;	main.c: 121: if (ev == timer_2){
      000164 0D 01            [ 1]  388 	tnz	(0x01, sp)
      000166 27 1D            [ 1]  389 	jreq	00129$
                                    390 ;	main.c: 122: if(SysCntrl.bootmode == 1){
      000168 C6u00u13         [ 1]  391 	ld	a, _SysCntrl+18
      00016B 4A               [ 1]  392 	dec	a
      00016C 26 0C            [ 1]  393 	jrne	00126$
                                    394 ;	main.c: 123: GPIO_ResetBits(SMARC_BOOTMODE);
      00016E A6 20            [ 1]  395 	ld	a, #0x20
      000170 AE 50 0A         [ 2]  396 	ldw	x, #0x500a
      000173 CDr00r00         [ 4]  397 	call	_GPIO_ResetBits
                                    398 ;	main.c: 124: SysCntrl.bootmode = 0;
      000176 35 00u00u13      [ 1]  399 	mov	_SysCntrl+18, #0x00
      00017A                        400 00126$:
                                    401 ;	main.c: 127: SetTimer(0, TIMER_50_MS);
      00017A AE 00 05         [ 2]  402 	ldw	x, #0x0005
      00017D 4F               [ 1]  403 	clr	a
      00017E CDr00r00         [ 4]  404 	call	_SetTimer
                                    405 ;	main.c: 128: SysCntrl.state = WORK_STATE;
      000181 35 08u00u09      [ 1]  406 	mov	_SysCntrl+8, #0x08
                                    407 ;	main.c: 133: case WORK_STATE:
      000185                        408 00129$:
                                    409 ;	main.c: 134: if (ev == timer_0){
      000185 0D 02            [ 1]  410 	tnz	(0x02, sp)
      000187 27 0F            [ 1]  411 	jreq	00131$
                                    412 ;	main.c: 135: GPIO_ToggleBits(LED_GOOD);
      000189 A6 08            [ 1]  413 	ld	a, #0x08
      00018B AE 50 00         [ 2]  414 	ldw	x, #0x5000
      00018E CDr00r00         [ 4]  415 	call	_GPIO_ToggleBits
                                    416 ;	main.c: 136: SetTimer(0, TIMER_1_SEC);
      000191 AE 00 64         [ 2]  417 	ldw	x, #0x0064
      000194 4F               [ 1]  418 	clr	a
      000195 CDr00r00         [ 4]  419 	call	_SetTimer
      000198                        420 00131$:
                                    421 ;	main.c: 139: if (ev == pwrbtn_off){
      000198 7B 03            [ 1]  422 	ld	a, (0x03, sp)
      00019A A1 05            [ 1]  423 	cp	a, #0x05
      00019C 26 4F            [ 1]  424 	jrne	00138$
                                    425 ;	main.c: 140: GPIO_ResetBits(POWER_CPU);
      00019E A6 40            [ 1]  426 	ld	a, #0x40
      0001A0 AE 50 05         [ 2]  427 	ldw	x, #0x5005
      0001A3 CDr00r00         [ 4]  428 	call	_GPIO_ResetBits
                                    429 ;	main.c: 141: GPIO_ResetBits(ENABLE_DCDC);
      0001A6 A6 02            [ 1]  430 	ld	a, #0x02
      0001A8 AE 50 05         [ 2]  431 	ldw	x, #0x5005
      0001AB CDr00r00         [ 4]  432 	call	_GPIO_ResetBits
                                    433 ;	main.c: 142: GPIO_ResetBits(ENABLE_5V);
      0001AE A6 04            [ 1]  434 	ld	a, #0x04
      0001B0 AE 50 05         [ 2]  435 	ldw	x, #0x5005
      0001B3 CDr00r00         [ 4]  436 	call	_GPIO_ResetBits
                                    437 ;	main.c: 143: GPIO_ResetBits(PG_SMARC);
      0001B6 A6 08            [ 1]  438 	ld	a, #0x08
      0001B8 AE 50 05         [ 2]  439 	ldw	x, #0x5005
      0001BB CDr00r00         [ 4]  440 	call	_GPIO_ResetBits
                                    441 ;	main.c: 144: GPIO_ResetBits(SMARC_BOOTMODE);
      0001BE A6 20            [ 1]  442 	ld	a, #0x20
      0001C0 AE 50 0A         [ 2]  443 	ldw	x, #0x500a
      0001C3 CDr00r00         [ 4]  444 	call	_GPIO_ResetBits
                                    445 ;	main.c: 145: GPIO_SetBits(LED_GOOD);
      0001C6 A6 08            [ 1]  446 	ld	a, #0x08
      0001C8 AE 50 00         [ 2]  447 	ldw	x, #0x5000
      0001CB CDr00r00         [ 4]  448 	call	_GPIO_SetBits
                                    449 ;	main.c: 146: SysCntrl.state = WAIT_PWR_BTN;
      0001CE 35 00u00u09      [ 1]  450 	mov	_SysCntrl+8, #0x00
                                    451 ;	main.c: 147: tick(start);
      0001D2 4F               [ 1]  452 	clr	a
      0001D3 5B 03            [ 2]  453 	addw	sp, #3
                                    454 ;	main.c: 149: break;
      0001D5 CCr00r19         [ 2]  455 	jp	_tick
                                    456 ;	main.c: 150: case PWR_ERROR:
      0001D8                        457 00134$:
                                    458 ;	main.c: 151: if ( ev == timer_0){
      0001D8 0D 02            [ 1]  459 	tnz	(0x02, sp)
      0001DA 27 11            [ 1]  460 	jreq	00138$
                                    461 ;	main.c: 152: GPIO_ToggleBits(LED_PWR);
      0001DC A6 01            [ 1]  462 	ld	a, #0x01
      0001DE AE 50 0F         [ 2]  463 	ldw	x, #0x500f
      0001E1 CDr00r00         [ 4]  464 	call	_GPIO_ToggleBits
                                    465 ;	main.c: 153: SetTimer(0, TIMER_100_MS);
      0001E4 AE 00 0A         [ 2]  466 	ldw	x, #0x000a
      0001E7 4F               [ 1]  467 	clr	a
      0001E8 5B 03            [ 2]  468 	addw	sp, #3
      0001EA CCr00r00         [ 2]  469 	jp	_SetTimer
                                    470 ;	main.c: 156: }
      0001ED                        471 00138$:
                                    472 ;	main.c: 157: }
      0001ED 5B 03            [ 2]  473 	addw	sp, #3
      0001EF 81               [ 4]  474 	ret
                                    475 ;	main.c: 158: void BtnAction(unsigned int press_time){
                                    476 ;	-----------------------------------------
                                    477 ;	 function BtnAction
                                    478 ;	-----------------------------------------
      0001F0                        479 _BtnAction:
                                    480 ;	main.c: 159: if(SysCntrl.state == WAIT_PWR_BTN){
                                    481 ;	main.c: 160: if (SysCntrl.btn_press_time >= TIMER_2_SEC){
                                    482 ;	main.c: 159: if(SysCntrl.state == WAIT_PWR_BTN){
      0001F0 C6u00u09         [ 1]  483 	ld	a, _SysCntrl+8
      0001F3 26 17            [ 1]  484 	jrne	00106$
                                    485 ;	main.c: 160: if (SysCntrl.btn_press_time >= TIMER_2_SEC){
      0001F5 CEu00u10         [ 2]  486 	ldw	x, _SysCntrl+15
      0001F8 A3 00 C8         [ 2]  487 	cpw	x, #0x00c8
      0001FB 25 05            [ 1]  488 	jrc	00102$
                                    489 ;	main.c: 161: tick(cpu_bootrom);
      0001FD A6 08            [ 1]  490 	ld	a, #0x08
                                    491 ;	main.c: 162: return;
      0001FF CCr00r19         [ 2]  492 	jp	_tick
      000202                        493 00102$:
                                    494 ;	main.c: 164: if (SysCntrl.btn_press_time >= TIMER_50_MS){
      000202 A3 00 05         [ 2]  495 	cpw	x, #0x0005
      000205 25 05            [ 1]  496 	jrc	00106$
                                    497 ;	main.c: 165: tick(pwrbtn_on);
      000207 A6 04            [ 1]  498 	ld	a, #0x04
                                    499 ;	main.c: 166: return;
      000209 CCr00r19         [ 2]  500 	jp	_tick
      00020C                        501 00106$:
                                    502 ;	main.c: 169: if(SysCntrl.state == WORK_STATE){
      00020C A1 08            [ 1]  503 	cp	a, #0x08
      00020E 27 01            [ 1]  504 	jreq	00143$
      000210 81               [ 4]  505 	ret
      000211                        506 00143$:
                                    507 ;	main.c: 170: if (SysCntrl.btn_press_time >= TIMER_2_SEC){
      000211 CEu00u10         [ 2]  508 	ldw	x, _SysCntrl+15
      000214 A3 00 C8         [ 2]  509 	cpw	x, #0x00c8
      000217 24 01            [ 1]  510 	jrnc	00144$
      000219 81               [ 4]  511 	ret
      00021A                        512 00144$:
                                    513 ;	main.c: 171: tick(pwrbtn_off);
      00021A A6 05            [ 1]  514 	ld	a, #0x05
                                    515 ;	main.c: 172: return;
                                    516 ;	main.c: 175: }
      00021C CCr00r19         [ 2]  517 	jp	_tick
                                    518 ;	main.c: 177: void ReadInputGpio() {
                                    519 ;	-----------------------------------------
                                    520 ;	 function ReadInputGpio
                                    521 ;	-----------------------------------------
      00021F                        522 _ReadInputGpio:
      00021F 52 02            [ 2]  523 	sub	sp, #2
                                    524 ;	main.c: 179: SysCntrl.btn_state = GPIO_ReadInputDataBit(PWR_BTN);
      000221 A6 04            [ 1]  525 	ld	a, #0x04
      000223 AE 50 00         [ 2]  526 	ldw	x, #0x5000
      000226 CDr00r00         [ 4]  527 	call	_GPIO_ReadInputDataBit
      000229 6B 02            [ 1]  528 	ld	(0x02, sp), a
      00022B AEr00r0B         [ 2]  529 	ldw	x, #(_SysCntrl+10)
      00022E 7B 02            [ 1]  530 	ld	a, (0x02, sp)
      000230 F7               [ 1]  531 	ld	(x), a
                                    532 ;	main.c: 180: SysCntrl.btn_change_time = SysCntrl.Timer;
      000231 CEu00u07         [ 2]  533 	ldw	x, _SysCntrl+6
      000234 CFu00u0E         [ 2]  534 	ldw	_SysCntrl+13, x
                                    535 ;	main.c: 182: if (SysCntrl.btn_state != SysCntrl.btn_state_prev){
      000237 C6u00u0B         [ 1]  536 	ld	a, _SysCntrl+10
      00023A 97               [ 1]  537 	ld	xl, a
      00023B C6u00u0A         [ 1]  538 	ld	a, _SysCntrl+9
                                    539 ;	main.c: 185: SysCntrl.btn_is_released = 1;
                                    540 ;	main.c: 186: SysCntrl.btn_press_time = SysCntrl.btn_change_time - SysCntrl.btn_last_change;
                                    541 ;	main.c: 182: if (SysCntrl.btn_state != SysCntrl.btn_state_prev){
      00023E 11 02            [ 1]  542 	cp	a, (0x02, sp)
      000240 27 26            [ 1]  543 	jreq	00104$
                                    544 ;	main.c: 183: SysCntrl.btn_state_prev = SysCntrl.btn_state;
      000242 90 AEr00r0A      [ 2]  545 	ldw	y, #(_SysCntrl+9)
      000246 9F               [ 1]  546 	ld	a, xl
      000247 90 F7            [ 1]  547 	ld	(y), a
                                    548 ;	main.c: 184: if(SysCntrl.btn_state != RESET){
                                    549 ;	main.c: 186: SysCntrl.btn_press_time = SysCntrl.btn_change_time - SysCntrl.btn_last_change;
                                    550 ;	main.c: 184: if(SysCntrl.btn_state != RESET){
      000249 C6u00u0B         [ 1]  551 	ld	a, _SysCntrl+10
      00024C 27 14            [ 1]  552 	jreq	00102$
                                    553 ;	main.c: 185: SysCntrl.btn_is_released = 1;
      00024E 35 01u00u12      [ 1]  554 	mov	_SysCntrl+17, #0x01
                                    555 ;	main.c: 186: SysCntrl.btn_press_time = SysCntrl.btn_change_time - SysCntrl.btn_last_change;
      000252 90 CEu00u0E      [ 2]  556 	ldw	y, _SysCntrl+13
      000256 CEu00u0C         [ 2]  557 	ldw	x, _SysCntrl+11
      000259 1F 01            [ 2]  558 	ldw	(0x01, sp), x
      00025B 72 F2 01         [ 2]  559 	subw	y, (0x01, sp)
      00025E 90 CFu00u10      [ 2]  560 	ldw	_SysCntrl+15, y
      000262                        561 00102$:
                                    562 ;	main.c: 188: SysCntrl.btn_last_change = SysCntrl.btn_change_time;
      000262 CEu00u0E         [ 2]  563 	ldw	x, _SysCntrl+13
      000265 CFu00u0C         [ 2]  564 	ldw	_SysCntrl+11, x
      000268                        565 00104$:
                                    566 ;	main.c: 191: if (SysCntrl.btn_is_released == 1){
      000268 C6u00u12         [ 1]  567 	ld	a, _SysCntrl+17
      00026B 4A               [ 1]  568 	dec	a
      00026C 26 0A            [ 1]  569 	jrne	00106$
                                    570 ;	main.c: 192: BtnAction(SysCntrl.btn_press_time);
      00026E CEu00u10         [ 2]  571 	ldw	x, _SysCntrl+15
      000271 CDr01rF0         [ 4]  572 	call	_BtnAction
                                    573 ;	main.c: 193: SysCntrl.btn_is_released = 0;
      000274 35 00u00u12      [ 1]  574 	mov	_SysCntrl+17, #0x00
      000278                        575 00106$:
                                    576 ;	main.c: 196: if( GPIO_ReadInputDataBit(PG_5V) ){
      000278 A6 10            [ 1]  577 	ld	a, #0x10
      00027A AE 50 05         [ 2]  578 	ldw	x, #0x5005
      00027D CDr00r00         [ 4]  579 	call	_GPIO_ReadInputDataBit
      000280 4D               [ 1]  580 	tnz	a
      000281 27 05            [ 1]  581 	jreq	00108$
                                    582 ;	main.c: 197: tick(pgood_5v);
      000283 A6 06            [ 1]  583 	ld	a, #0x06
      000285 CDr00r19         [ 4]  584 	call	_tick
      000288                        585 00108$:
                                    586 ;	main.c: 200: if( GPIO_ReadInputDataBit(CARRIER_PWR_ON) ){
      000288 A6 20            [ 1]  587 	ld	a, #0x20
      00028A AE 50 05         [ 2]  588 	ldw	x, #0x5005
      00028D CDr00r00         [ 4]  589 	call	_GPIO_ReadInputDataBit
      000290 4D               [ 1]  590 	tnz	a
      000291 27 07            [ 1]  591 	jreq	00111$
                                    592 ;	main.c: 201: tick(carrier);
      000293 A6 07            [ 1]  593 	ld	a, #0x07
      000295 5B 02            [ 2]  594 	addw	sp, #2
      000297 CCr00r19         [ 2]  595 	jp	_tick
      00029A                        596 00111$:
                                    597 ;	main.c: 204: }
      00029A 5B 02            [ 2]  598 	addw	sp, #2
      00029C 81               [ 4]  599 	ret
                                    600 ;	main.c: 206: void TimerMatch()
                                    601 ;	-----------------------------------------
                                    602 ;	 function TimerMatch
                                    603 ;	-----------------------------------------
      00029D                        604 _TimerMatch:
                                    605 ;	main.c: 208: if (!bMainTimer) {
      00029D C6u00u00         [ 1]  606 	ld	a, _bMainTimer+0
      0002A0 26 01            [ 1]  607 	jrne	00102$
                                    608 ;	main.c: 209: return;
      0002A2 81               [ 4]  609 	ret
      0002A3                        610 00102$:
                                    611 ;	main.c: 211: bMainTimer = 0;
      0002A3 72 5Fu00u00      [ 1]  612 	clr	_bMainTimer+0
                                    613 ;	main.c: 212: SysCntrl.Timer++;
      0002A7 CEu00u07         [ 2]  614 	ldw	x, _SysCntrl+6
      0002AA 5C               [ 1]  615 	incw	x
      0002AB CFu00u07         [ 2]  616 	ldw	_SysCntrl+6, x
                                    617 ;	main.c: 215: if (SysCntrl.Timer_0) { 
      0002AE CEu00u01         [ 2]  618 	ldw	x, _SysCntrl+0
      0002B1 5D               [ 2]  619 	tnzw	x
      0002B2 27 0C            [ 1]  620 	jreq	00106$
                                    621 ;	main.c: 216: SysCntrl.Timer_0--;
      0002B4 5A               [ 2]  622 	decw	x
      0002B5 CFu00u01         [ 2]  623 	ldw	_SysCntrl+0, x
                                    624 ;	main.c: 217: if (!SysCntrl.Timer_0) {
      0002B8 5D               [ 2]  625 	tnzw	x
      0002B9 26 05            [ 1]  626 	jrne	00106$
                                    627 ;	main.c: 218: tick(timer_0);
      0002BB A6 01            [ 1]  628 	ld	a, #0x01
      0002BD CDr00r19         [ 4]  629 	call	_tick
      0002C0                        630 00106$:
                                    631 ;	main.c: 223: if (SysCntrl.Timer_1) { 
      0002C0 CEu00u03         [ 2]  632 	ldw	x, _SysCntrl+2
      0002C3 5D               [ 2]  633 	tnzw	x
      0002C4 27 0C            [ 1]  634 	jreq	00110$
                                    635 ;	main.c: 224: SysCntrl.Timer_1--;
      0002C6 5A               [ 2]  636 	decw	x
      0002C7 CFu00u03         [ 2]  637 	ldw	_SysCntrl+2, x
                                    638 ;	main.c: 225: if (!SysCntrl.Timer_1) {
      0002CA 5D               [ 2]  639 	tnzw	x
      0002CB 26 05            [ 1]  640 	jrne	00110$
                                    641 ;	main.c: 226: tick(timer_1);
      0002CD A6 02            [ 1]  642 	ld	a, #0x02
      0002CF CDr00r19         [ 4]  643 	call	_tick
      0002D2                        644 00110$:
                                    645 ;	main.c: 231: if (SysCntrl.Timer_2) {
      0002D2 CEu00u05         [ 2]  646 	ldw	x, _SysCntrl+4
      0002D5 5D               [ 2]  647 	tnzw	x
      0002D6 26 01            [ 1]  648 	jrne	00157$
      0002D8 81               [ 4]  649 	ret
      0002D9                        650 00157$:
                                    651 ;	main.c: 232: SysCntrl.Timer_2--;
      0002D9 5A               [ 2]  652 	decw	x
      0002DA CFu00u05         [ 2]  653 	ldw	_SysCntrl+4, x
                                    654 ;	main.c: 233: if (!SysCntrl.Timer_2) {
      0002DD 5D               [ 2]  655 	tnzw	x
      0002DE 27 01            [ 1]  656 	jreq	00158$
      0002E0 81               [ 4]  657 	ret
      0002E1                        658 00158$:
                                    659 ;	main.c: 234: tick(timer_2);
      0002E1 A6 03            [ 1]  660 	ld	a, #0x03
                                    661 ;	main.c: 237: }
      0002E3 CCr00r19         [ 2]  662 	jp	_tick
                                    663 ;	main.c: 241: INTERRUPT_HANDLER(IRQ_Handler_TIM4, 25)
                                    664 ;	-----------------------------------------
                                    665 ;	 function IRQ_Handler_TIM4
                                    666 ;	-----------------------------------------
      0002E6                        667 _IRQ_Handler_TIM4:
      0002E6 4F               [ 1]  668 	clr	a
      0002E7 62               [ 2]  669 	div	x, a
                                    670 ;	main.c: 243: bMainTimer = 1;
      0002E8 35 01u00u00      [ 1]  671 	mov	_bMainTimer+0, #0x01
                                    672 ;	main.c: 244: TIM4_ClearITPendingBit(TIM4_IT_Update);
      0002EC A6 01            [ 1]  673 	ld	a, #0x01
      0002EE CDr00r00         [ 4]  674 	call	_TIM4_ClearITPendingBit
                                    675 ;	main.c: 245: }
      0002F1 80               [11]  676 	iret
                                    677 ;	main.c: 247: int main( void )
                                    678 ;	-----------------------------------------
                                    679 ;	 function main
                                    680 ;	-----------------------------------------
      0002F2                        681 _main:
                                    682 ;	main.c: 249: disableInterrupts();
      0002F2 9B               [ 1]  683 	sim;	
                                    684 ;	main.c: 251: GPIO_DeInit(GPIOA);
      0002F3 AE 50 00         [ 2]  685 	ldw	x, #0x5000
      0002F6 CDr00r00         [ 4]  686 	call	_GPIO_DeInit
                                    687 ;	main.c: 252: GPIO_DeInit(GPIOB);
      0002F9 AE 50 05         [ 2]  688 	ldw	x, #0x5005
      0002FC CDr00r00         [ 4]  689 	call	_GPIO_DeInit
                                    690 ;	main.c: 253: GPIO_DeInit(GPIOC);
      0002FF AE 50 0A         [ 2]  691 	ldw	x, #0x500a
      000302 CDr00r00         [ 4]  692 	call	_GPIO_DeInit
                                    693 ;	main.c: 254: GPIO_DeInit(GPIOD);
      000305 AE 50 0F         [ 2]  694 	ldw	x, #0x500f
      000308 CDr00r00         [ 4]  695 	call	_GPIO_DeInit
                                    696 ;	main.c: 256: GPIO_Init(LED_GOOD, GPIO_Mode_Out_PP_High_Fast);
      00030B 4B F0            [ 1]  697 	push	#0xf0
      00030D A6 08            [ 1]  698 	ld	a, #0x08
      00030F AE 50 00         [ 2]  699 	ldw	x, #0x5000
      000312 CDr00r00         [ 4]  700 	call	_GPIO_Init
                                    701 ;	main.c: 257: GPIO_Init(LED_PWR, GPIO_Mode_Out_PP_Low_Fast);
      000315 4B E0            [ 1]  702 	push	#0xe0
      000317 A6 01            [ 1]  703 	ld	a, #0x01
      000319 AE 50 0F         [ 2]  704 	ldw	x, #0x500f
      00031C CDr00r00         [ 4]  705 	call	_GPIO_Init
                                    706 ;	main.c: 258: GPIO_Init(ENABLE_DCDC, GPIO_Mode_Out_PP_Low_Fast);
      00031F 4B E0            [ 1]  707 	push	#0xe0
      000321 A6 02            [ 1]  708 	ld	a, #0x02
      000323 AE 50 05         [ 2]  709 	ldw	x, #0x5005
      000326 CDr00r00         [ 4]  710 	call	_GPIO_Init
                                    711 ;	main.c: 259: GPIO_Init(ENABLE_5V, GPIO_Mode_Out_PP_Low_Fast);
      000329 4B E0            [ 1]  712 	push	#0xe0
      00032B A6 04            [ 1]  713 	ld	a, #0x04
      00032D AE 50 05         [ 2]  714 	ldw	x, #0x5005
      000330 CDr00r00         [ 4]  715 	call	_GPIO_Init
                                    716 ;	main.c: 260: GPIO_Init(PG_SMARC, GPIO_Mode_Out_PP_Low_Fast);
      000333 4B E0            [ 1]  717 	push	#0xe0
      000335 A6 08            [ 1]  718 	ld	a, #0x08
      000337 AE 50 05         [ 2]  719 	ldw	x, #0x5005
      00033A CDr00r00         [ 4]  720 	call	_GPIO_Init
                                    721 ;	main.c: 261: GPIO_Init(POWER_CPU, GPIO_Mode_Out_PP_Low_Fast);
      00033D 4B E0            [ 1]  722 	push	#0xe0
      00033F A6 40            [ 1]  723 	ld	a, #0x40
      000341 AE 50 05         [ 2]  724 	ldw	x, #0x5005
      000344 CDr00r00         [ 4]  725 	call	_GPIO_Init
                                    726 ;	main.c: 262: GPIO_Init(RESET_CPU, GPIO_Mode_Out_PP_Low_Fast);
      000347 4B E0            [ 1]  727 	push	#0xe0
      000349 A6 80            [ 1]  728 	ld	a, #0x80
      00034B AE 50 05         [ 2]  729 	ldw	x, #0x5005
      00034E CDr00r00         [ 4]  730 	call	_GPIO_Init
                                    731 ;	main.c: 263: GPIO_Init(WDOG_OUT, GPIO_Mode_Out_PP_Low_Fast);
      000351 4B E0            [ 1]  732 	push	#0xe0
      000353 A6 10            [ 1]  733 	ld	a, #0x10
      000355 AE 50 0A         [ 2]  734 	ldw	x, #0x500a
      000358 CDr00r00         [ 4]  735 	call	_GPIO_Init
                                    736 ;	main.c: 265: GPIO_Init(PWR_BTN, GPIO_Mode_In_PU_No_IT);
      00035B 4B 40            [ 1]  737 	push	#0x40
      00035D A6 04            [ 1]  738 	ld	a, #0x04
      00035F AE 50 00         [ 2]  739 	ldw	x, #0x5000
      000362 CDr00r00         [ 4]  740 	call	_GPIO_Init
                                    741 ;	main.c: 266: GPIO_Init(PG_5V, GPIO_Mode_In_PU_No_IT);
      000365 4B 40            [ 1]  742 	push	#0x40
      000367 A6 10            [ 1]  743 	ld	a, #0x10
      000369 AE 50 05         [ 2]  744 	ldw	x, #0x5005
      00036C CDr00r00         [ 4]  745 	call	_GPIO_Init
                                    746 ;	main.c: 267: GPIO_Init(CARRIER_PWR_ON, GPIO_Mode_In_PU_No_IT);
      00036F 4B 40            [ 1]  747 	push	#0x40
      000371 A6 20            [ 1]  748 	ld	a, #0x20
      000373 AE 50 05         [ 2]  749 	ldw	x, #0x5005
      000376 CDr00r00         [ 4]  750 	call	_GPIO_Init
                                    751 ;	main.c: 268: GPIO_Init(WDOG_IN, GPIO_Mode_In_PU_No_IT);
      000379 4B 40            [ 1]  752 	push	#0x40
      00037B A6 01            [ 1]  753 	ld	a, #0x01
      00037D AE 50 05         [ 2]  754 	ldw	x, #0x5005
      000380 CDr00r00         [ 4]  755 	call	_GPIO_Init
                                    756 ;	main.c: 269: GPIO_Init(SMARC_BOOTMODE, GPIO_Mode_Out_PP_Low_Fast);
      000383 4B E0            [ 1]  757 	push	#0xe0
      000385 A6 20            [ 1]  758 	ld	a, #0x20
      000387 AE 50 0A         [ 2]  759 	ldw	x, #0x500a
      00038A CDr00r00         [ 4]  760 	call	_GPIO_Init
                                    761 ;	main.c: 274: CLK_DeInit();
      00038D CDr00r00         [ 4]  762 	call	_CLK_DeInit
                                    763 ;	main.c: 275: CLK_SYSCLKDivConfig(CLK_SYSCLKDiv_1);
      000390 4F               [ 1]  764 	clr	a
      000391 CDr00r00         [ 4]  765 	call	_CLK_SYSCLKDivConfig
                                    766 ;	main.c: 276: CLK_PeripheralClockConfig(CLK_Peripheral_TIM4, ENABLE);
      000394 4B 01            [ 1]  767 	push	#0x01
      000396 A6 02            [ 1]  768 	ld	a, #0x02
      000398 CDr00r00         [ 4]  769 	call	_CLK_PeripheralClockConfig
                                    770 ;	main.c: 277: CLK_PeripheralClockConfig(CLK_Peripheral_USART1, ENABLE);
      00039B 4B 01            [ 1]  771 	push	#0x01
      00039D A6 05            [ 1]  772 	ld	a, #0x05
      00039F CDr00r00         [ 4]  773 	call	_CLK_PeripheralClockConfig
                                    774 ;	main.c: 279: TIM4_DeInit();
      0003A2 CDr00r00         [ 4]  775 	call	_TIM4_DeInit
                                    776 ;	main.c: 281: TIM4_Cmd(DISABLE); 
      0003A5 4F               [ 1]  777 	clr	a
      0003A6 CDr00r00         [ 4]  778 	call	_TIM4_Cmd
                                    779 ;	main.c: 282: TIM4_TimeBaseInit(TIM4_Prescaler_1024, 156);
      0003A9 4B 9C            [ 1]  780 	push	#0x9c
      0003AB A6 0A            [ 1]  781 	ld	a, #0x0a
      0003AD CDr00r00         [ 4]  782 	call	_TIM4_TimeBaseInit
                                    783 ;	main.c: 283: TIM4_ClearFlag(TIM4_FLAG_Update);
      0003B0 A6 01            [ 1]  784 	ld	a, #0x01
      0003B2 CDr00r00         [ 4]  785 	call	_TIM4_ClearFlag
                                    786 ;	main.c: 284: TIM4_ITConfig(TIM4_IT_Update, ENABLE);
      0003B5 4B 01            [ 1]  787 	push	#0x01
      0003B7 A6 01            [ 1]  788 	ld	a, #0x01
      0003B9 CDr00r00         [ 4]  789 	call	_TIM4_ITConfig
                                    790 ;	main.c: 285: TIM4_Cmd(ENABLE);       // let's go
      0003BC A6 01            [ 1]  791 	ld	a, #0x01
      0003BE CDr00r00         [ 4]  792 	call	_TIM4_Cmd
                                    793 ;	main.c: 286: enableInterrupts();
      0003C1 9A               [ 1]  794 	rim;	
                                    795 ;	main.c: 289: bMainTimer = 0;
      0003C2 72 5Fu00u00      [ 1]  796 	clr	_bMainTimer+0
                                    797 ;	main.c: 290: SysCntrl.btn_state = SET;
      0003C6 35 01u00u0B      [ 1]  798 	mov	_SysCntrl+10, #0x01
                                    799 ;	main.c: 291: SysCntrl.btn_state_prev = SET;
      0003CA 35 01u00u0A      [ 1]  800 	mov	_SysCntrl+9, #0x01
                                    801 ;	main.c: 292: SysCntrl.btn_change_time = 0;
      0003CE AEr00r0E         [ 2]  802 	ldw	x, #(_SysCntrl+13)
      0003D1 6F 01            [ 1]  803 	clr	(0x1, x)
      0003D3 7F               [ 1]  804 	clr	(x)
                                    805 ;	main.c: 293: SysCntrl.btn_last_change = 0;
      0003D4 AEr00r0C         [ 2]  806 	ldw	x, #(_SysCntrl+11)
      0003D7 6F 01            [ 1]  807 	clr	(0x1, x)
      0003D9 7F               [ 1]  808 	clr	(x)
                                    809 ;	main.c: 295: tick(start);
      0003DA 4F               [ 1]  810 	clr	a
      0003DB CDr00r19         [ 4]  811 	call	_tick
                                    812 ;	main.c: 296: while (1) {
      0003DE                        813 00102$:
                                    814 ;	main.c: 297: ReadInputGpio();
      0003DE CDr02r1F         [ 4]  815 	call	_ReadInputGpio
                                    816 ;	main.c: 298: TimerMatch();
      0003E1 CDr02r9D         [ 4]  817 	call	_TimerMatch
      0003E4 20 F8            [ 2]  818 	jra	00102$
                                    819 ;	main.c: 302: }
      0003E6 81               [ 4]  820 	ret
                                    821 	.area CODE
                                    822 	.area CONST
                                    823 	.area INITIALIZER
                                    824 	.area CABS (ABS)
